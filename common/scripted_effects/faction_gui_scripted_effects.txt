# The following scripted effect sets-up the faction at game start.
faction_gui_initial = {
	# Put simply an array stores a list of things, used here to store the list of parties and list of seats.

	# faction_seat_array stores the list of seat numbers for each party
	add_to_array = { faction_seat_array = 44 } # Party Democrats
	add_to_array = { faction_seat_array = 8 } # Party Communists 
	add_to_array = { faction_seat_array = 0 } # Party Fascists
	add_to_array = { faction_seat_array = 48 } # Party Monarchists
    add_to_array = { faction_dem_p_array = 50 }   
    add_to_array = { faction_dem_p_array = 50 }    
    add_to_array = { faction_com_p_array = 50 }   
    add_to_array = { faction_com_p_array = 50 } 
    add_to_array = { faction_fas_p_array = 50 }   
    add_to_array = { faction_fas_p_array = 50 } 
    add_to_array = { faction_mon_p_array = 50 }   
    add_to_array = { faction_mon_p_array = 50 }     

	# faction_member_array stores the list of parties
	# This basically assigns an id for each party, so Party A = 1, Party B = 2, etc. (must start from 1 and is in order)
	add_to_array = { faction_member_array = 1 } # Party Democrats
	add_to_array = { faction_member_array = 2 } # Party Communists
	add_to_array = { faction_member_array = 3 } # Party Fascists
	add_to_array = { faction_member_array = 4 } # Party Monarchists
	add_to_array = { faction_dem_m_array = 1 } 
	add_to_array = { faction_dem_m_array = 2 }   
	add_to_array = { faction_com_m_array = 1 } 
	add_to_array = { faction_com_m_array = 2 } 
	add_to_array = { faction_fas_m_array = 1 } 
	add_to_array = { faction_fas_m_array = 2 } 
	add_to_array = { faction_mon_m_array = 1 } 
	add_to_array = { faction_mon_m_array = 2 }     

	# Modify what shows up in the gui
	reload_faction_gui = yes
}

faction_gui_call = {
    clear_array = faction_dem_p_array
    clear_array = faction_com_p_array
    clear_array = faction_fas_p_array
    clear_array = faction_mon_p_array
    ####DEM####
    set_temp_variable = { a = 100 }
    subtract_from_temp_variable = { a = var:fct_dem }
    add_to_array = { faction_dem_p_array = a }    
    add_to_array = { faction_dem_p_array = var:fct_dem }    
    ####COM####   
    set_temp_variable = { a = 100 }
    subtract_from_temp_variable = { a = var:fct_com }    
    add_to_array = { faction_com_p_array = a } 
    add_to_array = { faction_com_p_array = var:fct_com } 
    ####FAS#### 
    set_temp_variable = { a = 100 }
    subtract_from_temp_variable = { a = var:fct_fas }    
    add_to_array = { faction_fas_p_array = a } 
    add_to_array = { faction_fas_p_array = var:fct_fas }
    ####MON####
    set_temp_variable = { a = 100 }
    subtract_from_temp_variable = { a = var:fct_mon }    
    add_to_array = { faction_mon_p_array = a }   
    add_to_array = { faction_mon_p_array = var:fct_mon } 

    reload_faction_gui = yes

}

# The following scripted effect does the main job of generating the gui, by adding the seats for each party in a grid.
# This should be called every time you need to update the gui, when you add/subtract seats for example.
# Read the comments if you're interested in how it works
reload_faction_gui = {
#### COMMUNISM ####
    
    clear_array = faction_com_array
    
	for_each_loop = {
		array = faction_com_p_array

		add_to_array = { temp_com = faction_com_p_array^i }
	} 

	set_temp_variable = { temp_cindex_1 = 0 }
	set_temp_variable = { temp_cindex_2 = 1 }
	set_temp_variable = { temp_csize = temp_com^num }
	subtract_from_temp_variable = { temp_csize = 1 }    

	while_loop_effect = {
		limit = {
			check_variable = { temp_cindex_1 < temp_csize }
		}
		add_to_variable = { temp_com^temp_cindex_2 = temp_com^temp_cindex_1 }
		add_to_temp_variable = { temp_cindex_1 = 1 }
		add_to_temp_variable = { temp_cindex_2 = 1 }
	}
    
    for_loop_effect = {
        start = 0
        end = temp_com^num
        
        resize_array = { array = faction_com_array value = faction_com_m_array^v size = temp_com^v }       
    }

	clear_array = temp_com
    
#### DEMOCRATS ####
    
    clear_array = faction_dem_array
    
	for_each_loop = {
		array = faction_dem_p_array

		add_to_array = { temp_dem = faction_dem_p_array^i }
	} 

	set_temp_variable = { temp_cindex_1 = 0 }
	set_temp_variable = { temp_cindex_2 = 1 }
	set_temp_variable = { temp_csize = temp_dem^num }
	subtract_from_temp_variable = { temp_csize = 1 }    

	while_loop_effect = {
		limit = {
			check_variable = { temp_cindex_1 < temp_csize }
		}
		add_to_variable = { temp_dem^temp_cindex_2 = temp_dem^temp_cindex_1 }
		add_to_temp_variable = { temp_cindex_1 = 1 }
		add_to_temp_variable = { temp_cindex_2 = 1 }
	}
    
    for_loop_effect = {
        start = 0
        end = temp_dem^num
        
        resize_array = { array = faction_dem_array value = faction_dem_m_array^v size = temp_dem^v }       
    }

	clear_array = temp_dem    
    
#### FASCISTS ####
    
    clear_array = faction_fas_array
    
	for_each_loop = {
		array = faction_fas_p_array

		add_to_array = { temp_fas = faction_fas_p_array^i }
	} 

	set_temp_variable = { temp_cindex_1 = 0 }
	set_temp_variable = { temp_cindex_2 = 1 }
	set_temp_variable = { temp_csize = temp_fas^num }
	subtract_from_temp_variable = { temp_csize = 1 }    

	while_loop_effect = {
		limit = {
			check_variable = { temp_cindex_1 < temp_csize }
		}
		add_to_variable = { temp_fas^temp_cindex_2 = temp_fas^temp_cindex_1 }
		add_to_temp_variable = { temp_cindex_1 = 1 }
		add_to_temp_variable = { temp_cindex_2 = 1 }
	}
    
    for_loop_effect = {
        start = 0
        end = temp_fas^num
        
        resize_array = { array = faction_fas_array value = faction_fas_m_array^v size = temp_fas^v }       
    }

	clear_array = temp_fas   

#### MONARCHISTS ####
    
    clear_array = faction_mon_array
    
	for_each_loop = {
		array = faction_mon_p_array

		add_to_array = { temp_mon = faction_mon_p_array^i }
	} 

	set_temp_variable = { temp_cindex_1 = 0 }
	set_temp_variable = { temp_cindex_2 = 1 }
	set_temp_variable = { temp_csize = temp_mon^num }
	subtract_from_temp_variable = { temp_csize = 1 }    

	while_loop_effect = {
		limit = {
			check_variable = { temp_cindex_1 < temp_csize }
		}
		add_to_variable = { temp_mon^temp_cindex_2 = temp_mon^temp_cindex_1 }
		add_to_temp_variable = { temp_cindex_1 = 1 }
		add_to_temp_variable = { temp_cindex_2 = 1 }
	}
    
    for_loop_effect = {
        start = 0
        end = temp_mon^num
        
        resize_array = { array = faction_mon_array value = faction_mon_m_array^v size = temp_mon^v }       
    }

	clear_array = temp_mon       
}