on_actions = {
    ###################################################################################################################################################################################################################################
    ########################################################################################################[ Part A: StartUp ]########################################################################################################
    ###################################################################################################################################################################################################################################
	on_startup = {
		effect = {
			GRE = {
				faction_gui_initial = yes
                procure_me_generals_bugged=yes
                remove_ideas = GRE_debt_to_the_ifc                                          ### Fake idea that was planted on the main menu for display purposes as dynamic modifiers do not appear.
                set_variable = { fct_mon_effect_multiplier = 1 }
                set_variable = { fct_dem_effect_multiplier = 1 }
                set_variable = { fct_com_effect_multiplier = 1 }
                set_variable = { fct_fas_effect_multiplier = 1 }
			}
		}
	}

    on_startup = {                                                                           ### Setting Up the High Command Variables
        effect = {
            GRE = {
                ###[Papagos]###
                set_variable = { hc_papagos_mp = 0.02}
                set_variable = { hc_papagos_mcp = 5}
                set_variable = { hc_papagos_dcp = 0.05}
                set_variable = { hc_papagos_ca = 0.05}
                set_variable = { hc_papagos_cd = 0.05}
                ###[Drakos]###
                set_variable = { hc_drakos_amf = 0.03}
                set_variable = { hc_drakos_acc = 0.03}
                set_variable = { hc_drakos_waf = -0.02}
                set_variable = { hc_drakos_exp = 0.02}
                set_variable = { hc_drakos_nsg = 4}
                set_variable = { hc_drakos_osfp = -0.02}
                ###[Stanotas]###
                set_variable = { hc_stanotas_rec = 0.04}
                set_variable = { hc_stanotas_natt = 0.02}
                set_variable = { hc_stanotas_bthr = 0.01}
                set_variable = { hc_stanotas_ca = 0.03}
                set_variable = { hc_stanotas_cd = 0.03}
                ###[Zervas]###
                set_variable = { hc_zervas_asp = 0.03}
                set_variable = { hc_zervas_mcp = 5}
                set_variable = { hc_zervas_dcp = 0.05}
                set_variable = { hc_zervas_lrr = 0.01}
                set_variable = { hc_zervas_olwm = -0.02}
                ###[Plastiras]###
                set_variable = { hc_plastiras_ca = 0.06}
                set_variable = { hc_plastiras_cd = 0.04}
                set_variable = { hc_plastiras_asp = 0.03}
                set_variable = { hc_plastiras_bthr = 0.03}
                ###[Katsimitros]###
                set_variable = { hc_katsimitros_mentr = 0.04}
                set_variable = { hc_katsimitros_sentr = 0.08}
                set_variable = { hc_katsimitros_rentr = 0.06}
                set_variable = { hc_katsimitros_waf = -0.04}
                set_variable = { hc_katsimitros_nsg = 6}
                ###[Kosmas]###
                set_variable = { hc_kosmas_infa = 0.04}
                set_variable = { hc_kosmas_infd = 0.04}
                set_variable = { hc_kosmas_infexpt = 0.1}
                set_variable = { hc_kosmas_infexpc = 0.06}
                ###[Aggelis]###
                set_variable = { hc_aggelis_arta = 0.04}
                set_variable = { hc_aggelis_artd = 0.04}
                set_variable = { hc_aggelis_artexpt = 0.1}
                set_variable = { hc_aggelis_artexpc = 0.06}
                ###[Davakis]###
                set_variable = { hc_davakis_off = 0.01}
                set_variable = { hc_davakis_def = 0.01}
                set_variable = { hc_davakis_bthr = 0.02}
                set_variable = { hc_davakis_aspd = 0.02}
                set_variable = { hc_davakis_specc = 0.04}
                set_variable = { hc_davakis_asbc = 0.04}
                set_variable = { hc_davakis_acpf = 0.04}
                set_variable = { hc_davakis_sbb = 0.06}
                ###[Alexakis]###
                set_variable = { hc_alexakis_mtl = -0.1}
                set_variable = { hc_alexakis_rgos = -0.08}
                set_variable = { hc_alexakis_rgf = -0.08}
                set_variable = { hc_alexakis_rdtg = -0.08}
                set_variable = { hc_alexakis_cito = -12}
                set_variable = { hc_alexakis_encf = 0.06}
                set_variable = { hc_alexakis_eodc = 0.05}
                set_variable = { hc_alexakis_rootout = 0.05}
                ###[Velouchiotis]###
                set_variable = { hc_velouchiotis_base_casred = 0.08}
                set_variable = { hc_velouchiotis_base_digs = 0.12}
                set_variable = { hc_velouchiotis_base_expgain = 0.05}
                set_variable = { hc_velouchiotis_base_attr = -0.03}
                set_variable = { hc_velouchiotis_base_orgreg = 0.03}
                set_variable = { hc_velouchiotis_base_recf = 0.04}
                set_variable = { hc_velouchiotis_base_plansp = 0.05}
                set_variable = { hc_velouchiotis_base_mtl = -0.1}
                ###[Bakirtzis]###
                set_variable = { hc_bakirtzis_arta = 0.04}
                set_variable = { hc_bakirtzis_artd = 0.04}
                set_variable = { hc_bakirtzis_maxp = 0.02}
                set_variable = { hc_bakirtzis_spdp = 0.04}
                ###[Rossios]###
                set_variable = { hc_rossios_infa = 0.03}
                set_variable = { hc_rossios_infd = 0.03}
                set_variable = { hc_rossios_infexpt = 0.08}
                set_variable = { hc_rossios_infexpc = 0.05}
                ###[Sakellariou]###
                set_variable = { hc_sakellariou_cee = 0.02}
                set_variable = { hc_sakellariou_se = 0.03}
                set_variable = { hc_sakellariou_egc = 0.05}
                ###[Demestichas]###
                set_variable = { hc_demestichas_ai = 0.05}
                set_variable = { hc_demestichas_nips = 0.05}
                set_variable = { hc_demestichas_nic = 5}
                set_variable = { hc_demestichas_nip = -0.05}
                ###[Kavvadias]###
                set_variable = { hc_kavvadias_egsf = 0.05}
                set_variable = { hc_kavvadias_nsaf = 0.03}
                set_variable = { hc_kavvadias_nsdf = 0.03}
                ###[Oikonomou]###
                set_variable = { hc_oikonomou_egcsf = 0.05}
                set_variable = { hc_oikonomou_ncsaf = 0.03}
                set_variable = { hc_oikonomou_ncsdf = 0.03}
                ###[Voulgaris]###
                set_variable = { hc_voulgaris_ns = 0.03}
                ###[Loundras]###
                set_variable = { hc_loundras_cee = 0.04}
                set_variable = { hc_loundras_naaaf = 0.05}
                ###[Toubas]###
                set_variable = { hc_toubas_nfcf = -0.03}
                set_variable = { hc_toubas_na = -0.02}
                set_variable = { hc_toubas_nac = -0.03}
                set_variable = { hc_toubas_ncef = -0.05}
                set_variable = { hc_toubas_nrs = 0.06}
                set_variable = { hc_toubas_nric = -0.06}
                set_variable = { hc_toubas_neuxc = -0.10}
                ###[Avgeris]###
                set_variable = { hc_avgeris_sbb = 0.05}
                set_variable = { hc_avgeris_ncsaf = 0.04}
                set_variable = { hc_avgeris_ncsdf = 0.04}
                ###[Iatridis]###
                set_variable = { hc_iatridis_nfcf = 0.05}
                set_variable = { hc_iatridis_nv = -0.04}
                set_variable = { hc_iatridis_nsaf = 0.04}
                set_variable = { hc_iatridis_nsdf = 0.04}
                set_variable = { hc_iatridis_egsf = 0.05}
                ###[Spyromilios]###
                set_variable = { hc_spyromilios_nif = 0.1}
                set_variable = { hc_spyromilios_nidb = 0.1}
                set_variable = { hc_spyromilios_nd = 0.05}
                set_variable = { hc_spyromilios_nefsrpf = -0.05}
                set_variable = { hc_spyromilios_os = 1}
            }
        }
    }
    
    ###################################################################################################################################################################################################################################
    ################################################################################################[ Part B: On Daily/Weekly/Monthly ]################################################################################################
    ##########################################################################################################[ Non Event ]############################################################################################################
    
    on_monthly_GRE = {
        effect = {                                                                                         ### Training Leftovers
            if = {
                limit = { check_variable = { GRE.preparedness_level<1 }}
                set_temp_variable = { tmpY=-1 }
                randomly_train_tmpX_officers = yes
            }
        }
        effect = {
            if = {
                limit={ date>1937.8.30 NOT={ check_variable={ GRE.gold_reserves=0 }}}

                if={ limit={ date>1938.6.30 } subtract_from_variable={ GRE.gold_reserves=2 }}
                else_if={ limit={ date>1937.12.30 } subtract_from_variable={ GRE.gold_reserves=1 }}
                else_if={ limit={ date>1937.8.30 } subtract_from_variable={ GRE.gold_reserves=0.5 }}
                clamp_variable = { var=GRE.gold_reserves min=0 }
                recalculate_gold_reserve_bonuses=yes
            }
        }
        effect = {
            if = {
                limit={ mussolini_historical_tensions_with_greece=yes }

                apply_on_actions_fluctuations_of_itagg_escalation=yes
            }
        }
        effect = {                                                                                          ### Monthly checks for fortifications in the Albanian border
            if = {
                limit = {
                    mussolini_historical_tensions_with_greece=yes                                            ## Make sure the Italians have Mussolini as leader (not ahistorical).
                    NOT = { has_country_flag = GRE_stop_checking_fortifications }                            ## This flag is set only when THIS event is triggered (so it doesn't repeat).
                    NOT = { has_country_flag = GRE_safe_from_italian_immediate_action }                      ## This flag is set through various manners. E.g. exoteriki politiki decisions.
                    forts_in_grecoalbanian_borderline_exist=yes
                }
                set_country_flag = GRE_stop_checking_fortifications
                country_event={ id=hellenic_news.6 days=0 }
                if = {
                    limit={ ALB={ exists=yes } is_puppet=no }

                    ITA = {
                        if = {                                                                                ## If Italy not in faction, force her into one and make Albania their puppet.
                            limit={ ITA={ is_in_faction = no }}                                                # If they already are, add them to that faction.
                            create_faction = "Novus Imperium Romanum"
                        }
                        add_to_faction = ALB
                        puppet = ALB
                        create_wargoal = {                                                                     ## Give Italy wargoal for 30 days.
                            type = puppet_wargoal_focus
                            target = GRE
                            expire = 30
                        }
                    }
                }
            }
        }
    }

    on_monthly_AGO = {                                                                                       ## Monthly trains officers purged, incase they are brought back
        effect = {
            if = {
                limit = { check_variable={ AGO.army_leaders>0 } any_army_leader={ has_unpreparedness_level=yes not_recently_trained=yes }}

                every_army_leader = {
                    limit = { has_unpreparedness_level=yes not_recently_trained=yes }
                    reduce_unpreparedness = yes
                }
            }
        }
    }
    
    on_weekly_GRE = {                                                                                       ### Main Weekly Effects for Greece
        effect = {                                                                                           ## Checks for amount of factories certain focuses will grant
            if = {                                                                                            # "Bedrock of..."
                limit={ 
                    NOT={ has_completed_focus=GRE_bedrock_of_balkan_financial_stability }
                    has_completed_focus=GRE_a_game_of_shadows
                }
                GRE_bedrock_check = yes
            }
            if = {                                                                                            # "Open Foreign..."
                limit={ 
                    NOT={ has_completed_focus=GRE_open_foreign_subsidized_factories }                   
                    has_completed_focus=GRE_a_game_of_shadows
                }
                GRE_subsidized_check = yes
            }
            if = {                                                                                            # "Mobilise Economy..."
                limit = { 
                    NOT={ has_completed_focus=GRE_mobilise_our_economy }                                
                    has_completed_focus=GRE_a_game_of_shadows
                }
                GRE_mobilized_check = yes
            }
        }
        effect={
            if = {
                limit = {
                    NOT={ has_war_with=ITA }
                    has_greco_italian_war_occured=no
                }
                GRE_calculate_max_divisions = yes
            }
        }
        effect={                                                                                             ## Officer Preparedness Level
            if = { limit={ check_variable={ preparedness_level<1 }} calculate_unpreparedness=yes }
        }
        effect={                                                                                             ## Faction Mechanics Modifiers (+GUI update)
            if = {
                limit={ NOT={ has_completed_focus=GRE_dreams_of_a_grand_coalition }}

                if = {
                    limit={ check_variable={ modifier@fct_mon_modifier_token>0 }}
                    add_to_variable={ fct_mon=modifier@fct_mon_modifier_token }
                }
                if = {
                    limit={ check_variable={ modifier@fct_com_modifier_token>0 } }
                    add_to_variable={ fct_com=modifier@fct_com_modifier_token }
                }
                if = {
                    limit={ check_variable={ modifier@fct_fas_modifier_token>0 } }
                    add_to_variable={ fct_fas=modifier@fct_fas_modifier_token }
                }
                if = {
                    limit={ check_variable={ modifier@fct_dem_modifier_token>0 } }
                    add_to_variable={ fct_dem=modifier@fct_dem_modifier_token }
                }
                GRE_faction_refresh=yes
            }
        }
        effect = {                                                                                          ## Weekly Influence
            if = {
                limit={ NOT={ has_global_flag=weekly_favor_mechanic_frozen }}
                clear_array = global.favor_mechanic
                clear_array = GRE.important_nations
                every_country = { limit={ NOT={ original_tag=GRE }} add_to_array={ global.favor_mechanic=THIS.id } check_to_add_to_important_nations=yes GRE_add_favor_weekly=yes }
            }
        }
        effect = {
            if = {
                limit={ spanish_civil_war_is_ongoing=yes }
                calculate_schachtplan_decision_costs=yes
            }
        }
        effect = {
            if = {
                limit={ mussolini_historical_tensions_with_greece=yes }
                apply_on_actions_fluctuations_of_itagg_acceleration=yes
            }
        }
    }
    
    on_daily_GRE = {
        effect = {
            if = {
                limit = { NOT={ check_variable={ GRE.allcivs=GRE.num_of_civilian_factories }}}

                calculate_domciv_ratio=yes
                calculate_construction_penalty=yes
            }
        }
        effect = {
            if = {
                limit = { has_country_flag=infl_mech_opened }

                inflmech_apply_filters_and_sort=yes
            }
        }
        effect = {
            if = {
                limit = { OR={ check_variable={ GRE.true_debt@ITA>0 } check_variable={ GRE.true_debt@ENG>0 } check_variable={ GRE.true_debt@FRA>0 } }}
                add_to_temp_array = { check_debt_nations=ENG }
                add_to_temp_array = { check_debt_nations=FRA }
                add_to_temp_array = { check_debt_nations=ITA }
                for_each_scope_loop = {
                    array=check_debt_nations

                    if = {
                        limit = { check_variable = { GRE.true_debt@THIS>0 }}

                        ########################[Settings Days Remaining&Pased]######################
                        set_temp_variable = { days_left=GRE.ecall_froze_debt_end@THIS }
                        subtract_from_temp_variable = { days_left=GRE.ecall_froze_debt_at@THIS }
                        set_temp_variable = { days_passed=global.num_days }
                        subtract_from_temp_variable = { days_passed=GRE.ecall_froze_debt_at@THIS }
                        subtract_from_temp_variable = { days_left=days_passed }
                        set_variable = { GRE.ecall_froze_debt_remaining_days@THIS=days_left }
                        set_variable = { GRE.ecall_froze_debt_passed_days@THIS=days_passed}
                        ##############################################################################
                        if = { 
                            limit = { check_variable={ days_left=0 }}

                            set_variable = { GRE.debt_package = GRE.true_debt@THIS }
                            multiply_variable = { GRE.debt_package = -1 }
                            THIS = { GRE_update_debt_status = yes }
                            clear_variable = GRE.true_debt@THIS
                            clear_variable = GRE.ecall_froze_debt_end@THIS
                            clear_variable = GRE.ecall_froze_debt_at@THIS
                            clear_variable = GRE.ecall_froze_debt_remaining_days
                            clear_variable = GRE.ecall_froze_debt_passed_days
                        }
                    }
                }
            }
        }
        effect = {
            if = {
                limit={ check_variable={ GRE.ecall_bank_internal_steer_remaining_days>0 }}

                set_temp_variable = { days_left=GRE.ecall_bank_internal_steer_end }
                subtract_from_temp_variable = { days_left=GRE.ecall_bank_internal_steer_at }
                set_temp_variable = { days_passed=global.num_days }
                subtract_from_temp_variable = { days_passed=GRE.ecall_bank_internal_steer_at }
                subtract_from_temp_variable = { days_left=days_passed }
                set_variable = { GRE.ecall_bank_internal_steer_remaining_days=days_left }
                set_variable = { GRE.ecall_bank_internal_steer_passed_days=days_passed }
                set_variable = { GRE.ecall_bank_drift_immediate_cost=10 }
                multiply_variable={ GRE.ecall_bank_drift_immediate_cost=GRE.ecall_bank_internal_steer_remaining_days }
                if = {
                    limit={ check_variable={ GRE.ecall_bank_internal_steer_passed_days=15 }}

				    ecall_set_bank_shift_variables_internal=yes
                    clear_variable = GRE.ecall_bank_internal_steer_remaining_days
                    clear_variable = GRE.ecall_bank_internal_steer_passed_days
                }
            }
        }
        effect = {
            if = {
                limit={ check_variable={ GRE.ecall_bank_external_steer_remaining_days>0 }}

                set_temp_variable = { days_left=GRE.ecall_bank_external_steer_end }
                subtract_from_temp_variable = { days_left=GRE.ecall_bank_external_steer_at }
                set_temp_variable = { days_passed=global.num_days }
                subtract_from_temp_variable = { days_passed=GRE.ecall_bank_external_steer_at }
                subtract_from_temp_variable = { days_left=days_passed }
                set_variable = { GRE.ecall_bank_external_steer_remaining_days=days_left }
                set_variable = { GRE.ecall_bank_external_steer_passed_days=days_passed }
                set_variable = { GRE.ecall_bank_drift_immediate_cost=10 }
                multiply_variable={ GRE.ecall_bank_drift_immediate_cost=GRE.ecall_bank_external_steer_remaining_days }
                if = {
                    limit={ check_variable={ GRE.ecall_bank_external_steer_passed_days=15 }}

				    ecall_set_bank_shift_variables_external=yes
                    clear_variable = GRE.ecall_bank_external_steer_remaining_days
                    clear_variable = GRE.ecall_bank_external_steer_passed_days
                }
            }
        }
        effect = {
            if = {
                limit={ check_variable={ GRE.ecall_decrease_exports_remaining_days>0 }}

                set_temp_variable = { days_left=GRE.ecall_decrease_exports_end }
                subtract_from_temp_variable = { days_left=GRE.ecall_decrease_exports_at }
                set_temp_variable = { days_passed=global.num_days }
                subtract_from_temp_variable = { days_passed=GRE.ecall_decrease_exports_at }
                subtract_from_temp_variable = { days_left=days_passed }
                set_variable = { GRE.ecall_decrease_exports_remaining_days=days_left }
                set_variable = { GRE.ecall_decrease_exports_passed_days=days_passed }
                set_variable = { GRE.ecall_exports_drift_immediate_cost=10 }
                multiply_variable={ GRE.ecall_exports_drift_immediate_cost=GRE.ecall_decrease_exports_remaining_days }
                if = {
                    limit={ check_variable={ GRE.ecall_decrease_exports_passed_days=15 }}

				    ecall_set_ministry_shift_towards_less_exports=yes
                    clear_variable = GRE.ecall_decrease_exports_remaining_days
                    clear_variable = GRE.ecall_decrease_exports_passed_days
                }
            }
        }
        effect = {
            if = {
                limit={ check_variable={ GRE.ecall_increase_exports_remaining_days>0 }}

                set_temp_variable = { days_left=GRE.ecall_increase_exports_end }
                subtract_from_temp_variable = { days_left=GRE.ecall_increase_exports_at }
                set_temp_variable = { days_passed=global.num_days }
                subtract_from_temp_variable = { days_passed=GRE.ecall_increase_exports_at }
                subtract_from_temp_variable = { days_left=days_passed }
                set_variable = { GRE.ecall_increase_exports_remaining_days=days_left }
                set_variable = { GRE.ecall_increase_exports_passed_days=days_passed }
                set_variable = { GRE.ecall_exports_drift_immediate_cost=10 }
                multiply_variable={ GRE.ecall_exports_drift_immediate_cost=GRE.ecall_increase_exports_remaining_days }
                if = {
                    limit={ check_variable={ GRE.ecall_increase_exports_passed_days=15 }}

				    ecall_set_ministry_shift_towards_more_exports=yes
                    clear_variable = GRE.ecall_increase_exports_remaining_days
                    clear_variable = GRE.ecall_increase_exports_passed_days
                }
            }
        }
        effect = {
            if = {
                limit={ check_variable={ GRE.ecall_economy_upgrade_remaining_days>0 }}

                set_temp_variable = { days_left=GRE.ecall_economy_upgrade_end }
                subtract_from_temp_variable = { days_left=GRE.ecall_economy_upgrade_at }
                set_temp_variable = { days_passed=global.num_days }
                subtract_from_temp_variable = { days_passed=GRE.ecall_economy_upgrade_at }
                subtract_from_temp_variable = { days_left=days_passed }
                set_variable = { GRE.ecall_economy_upgrade_remaining_days=days_left }
                set_variable = { GRE.ecall_economy_upgrade_passed_days=days_passed }
                #########################
                set_temp_variable = { base_days=12 }
                set_temp_variable = { upg=GRE.ecall_economy_upgrade_passed_days }
                modulo_temp_variable = { upg=12 }
                subtract_from_temp_variable = { base_days=upg }
                set_variable={ GRE.ecall_economy_batch_upgrade_in=base_days }
                ########################
                if={ 
                    limit={ check_variable={ GRE.ecall_economy_upgrade_passed_days>1 } check_variable={ upg=0 }}

                    ecall_upgrade_economy_rate=yes
                    subtract_from_variable={ GRE.ecall_economy_upgrade_batches_left=1 }
                    subtract_from_temp_variable={ avoidance_chance?100=upgrade_economy_detection }
                    random_list={
                        seed=random

                        avoidance_chance={}
                        upgrade_economy_detection={ set_variable={ h50_type=0 } country_event={ id=hellas.50 days=0 }}
                    }
                }
                set_variable = { GRE.ecall_economy_immediate_cost=50 }
                multiply_variable={ GRE.ecall_economy_immediate_cost=GRE.ecall_economy_upgrade_batches_left }
                if = {
                    limit={ check_variable={ GRE.ecall_economy_upgrade_passed_days=60 }}

                    add_to_variable = { GRE.economy_level=1 }
                    clear_variable = GRE.ecall_economy_upgrade_remaining_days
                    clear_variable = GRE.ecall_economy_upgrade_passed_days
                    clear_variable = GRE.ecall_economy_upgrade_batches_left
                    clear_variable = GRE.ecall_economy_batch_upgrade_in
                }
            }
            else= { ecall_upgrade_economy_detection_test=yes }
        }
        effect = {
            if = {
                limit = { NOT={ check_variable={ GRE.economy_level=GRE.apparent_economy_level }}}

                ecall_announce_economy_backslash_calculation=yes
            }
        }
        effect = {
            if = {
                limit = { has_dynamic_modifier = { modifier = GRE_war_strain }}

                GRE_update_strain_on_industry = yes
            }
        }
        effect = {
            if = {
                limit = {
                    OR = {
                        check_variable = { modifier@axal_modifier_token > 0 }
                        check_variable = { modifier@alax_modifier_token > 0 }
                    }
                }
                add_to_variable = { GRE.axal = modifier@axal_modifier_token }
                subtract_from_variable = { GRE.axal = modifier@alax_modifier_token }
                axal_gui_call = yes
            }
        }
        effect = {
            if = {
                limit = { check_variable={ modifier@neut_modifier_token>0 }}
                if = {
                    limit = { check_variable={ GRE.axal < 50 }}
                    add_to_variable = { GRE.axal=modifier@neut_modifier_token }
                }
                else = {
                    subtract_from_variable = { GRE.axal=modifier@neut_modifier_token }
                }
                axal_gui_call = yes
            }
        }
        effect = {
            if = { limit = { date > 1940.8.15 } country_event = { id = hellas.92 days = 0 } }
            if = { limit = { date > 1940.10.28 trigger_italian_war_event=yes } ITA = { country_event = { id = hellas.97 days = 0 } } }
        }
        effect = {
            if = {
                limit = { has_country_flag = GRE_faction_gui_flag }
                find_total_and_faction_weight_of_ideology_characters = yes
                find_num_weight_of_ideology_characters = yes
                update_gre_the_army_dyn = yes
            }
        }
    }

    on_weekly_ITA = {
        effect = {
            check_and_apply_on_weekly_italian_nagging=yes
        }
    }

    on_weekly = {
        effect = {
            if={
                limit={ has_opinion_modifier=ITA_nagged_TARGET_against_GRE NOT={ has_country_flag=ita_nagging_in_effect }}
                remove_opinion_modifier={ target=GRE modifier=ITA_nagged_TARGET_against_GRE }
                if={ limit={ is_embargoing=GRE } break_embargo=GRE }
            }
        }
    }
    
    ###################################################################################################################################################################################################################################
    #######################################################################################################[ Part C: On Action ]#######################################################################################################
    ###########################################################################################################[ Non Event ]###########################################################################################################

    on_unit_leader_created = {
		effect = {
            if = { 
                limit={ FROM={ original_tag = GRE }}
                character = {
                    if = { 
                        limit = { is_operative = no }
                        root = {
                            random_list = {
                                seed = random
                                12.5 = { add_unit_leader_trait = trait_GRE_conventional_leanings }
                                12.5 = { add_unit_leader_trait = trait_GRE_revolutionary_leanings }
                                12.5 = { add_unit_leader_trait = trait_GRE_monarchofascism_leanings }
                                12.5 = { add_unit_leader_trait = trait_GRE_socialdemocratic_leanings }
                                12.5 = { add_unit_leader_trait = trait_GRE_stauch_monarchist_persona }
                                12.5 = { add_unit_leader_trait = trait_GRE_stauch_republican_persona }
                                12.5 = { add_unit_leader_trait = trait_GRE_stauch_communist_persona }
                                12.5 = { add_unit_leader_trait = trait_GRE_stauch_fascist_persona }
                            }
                            if={
                                limit={ date > 1936.1.2 }                                       ## Make sure we do not run this for procured generals.

                                set_temp_variable = { v=THIS }
                                add_to_array={ GRE.sca_portrait@var:portrait_number=var:v }
                                add_to_array={ GRE.secondary_characters=var:v }
                                add_to_array={ GRE.gov_coc@2=var:v }
                                var:v={
                                    vscope_add_set_character_mbranch=yes 
                                    vscope_add_set_character_ideology=yes
                                }
                                ###[HERE WE MUST ADD CUSTOM PORTRAITS]###
                                ###[HERE WE MUST ADD UNPREPARED GENERAL BASED ON OVERALL OR SET IT IMPOSSIBLE TO HIRE IF UNPREPAREDNESS EXISTS]###
                            }
                        }
                    }
                }
            }
        }
    }

    on_capitulation_immediate = {
        effect = {
            if = {
                limit = {
                    GRE = { has_completed_focus = GRE_a_stolen_mind_a_broken_heart }
                    FROM = {
                        OR = {
                            tag = GRE
                            is_in_faction_with = GRE
                        }
                    }
                }
                if = {
                    limit = { ROOT = { is_major = yes } }
                    add_to_variable = { GRE.acad_res_spd = 0.025 }
                }
                else = { add_to_variable = { GRE.acad_res_spd = 0.01 } }
            }
        }
    }

	on_war_relation_added = {                                                                               ### Metaxas line pop when Bulgaria declares on Greece (or vice-versa)
		effect = {
			if = {
				limit = {
                    OR = {
                        original_tag = BUL
                        original_tag = GRE
                    }
					FROM = {
                        OR = {
                            original_tag = GRE
                            original_tag = BUL
                        }
					}
				}
				GRE = { GRE_line_pop = yes }
			}
        }
    }
    
    on_annex = {                                                                                            ### Lent Factories upon Annexation
        effect = {
            if = {
                limit = { check_variable = { FROM.civslent@GRE > 0 } }                                       ## If annexed nation has lent civs to Greece
                if = {
                    limit = {
                        check_variable = { ROOT.favor@GRE < 0 }                                                 ## and Greece has abysmal influence over the one who annexed it. 
                        #GRE = { NOT = { has_country_flag = GRE_assets_solidified } }                            # and hasn't solidified her assets
                    }
                    set_temp_variable = { x = FROM.civslent@GRE }
                    multiply_temp_variable = { x = -1 }
                    round_temp_variable = x
                    set_variable = { ROOT.civslent@GRE = FROM.civslent@GRE }
                    GRE = { add_offsite_building = { type = industrial_complex level = x } }                    ## then you get ditched
                }
                else = { set_variable = { ROOT.civslent@GRE = FROM.civslent@GRE } }                             ## else, swapperoo 
            }
            if = {
                limit = { check_variable = { FROM.milslent@GRE > 0 } }
                if = {
                    limit = {
                        check_variable = { ROOT.favor@GRE < 0 }
                        GRE = { NOT = { has_country_flag = GRE_assets_solidified } }
                    }
                    set_temp_variable = { x = FROM.milslent@GRE }
                    multiply_temp_variable = { x = -1 }
                    round_temp_variable = x
                    set_variable = { ROOT.milslent@GRE = FROM.milslent@GRE }
                    GRE = { add_offsite_building = { type = industrial_complex level = x } }
                }
                else = { set_variable = { ROOT.milslent@GRE = FROM.milslent@GRE } }
            }
            clear_variable = FROM.civslent@GRE                                                                  ## In anycase, clear the variable for the annexed nation. Do the same for mils.
            clear_variable = FROM.milslent@GRE  
        }
    }
    
    on_war_relation_added = {                                                                               ### This is to remove a nation's off-site factories granted to Greece upon war between them
		effect = {
            if = { 
                limit = {
                    OR = { FROM = { original_tag = GRE } ROOT = { original_tag = GRE } }
                    GRE = { NOT = { has_country_flag = GRE_assets_solidified } }                             ## If Greece hasn't solidified her assets, then upon war she loses factories lent to her.
                }
                if = {                                                                                           ## If Greece is the attacker
                    limit = { 
                        ROOT = { original_tag = GRE } 
                    }                                                    
                    hidden_effect = {
                        set_temp_variable = { x = FROM.milslent@GRE }
                        multiply_temp_variable = { x = -1 }
                        round_temp_variable = x
                        ROOT = { add_offsite_building = { type = arms_factory level = x } }
                        set_temp_variable = { x = FROM.civslent@GRE }
                        multiply_temp_variable = { x = -1 }
                        ROOT = { add_offsite_building = { type = industrial_complex level = x } }
                    }
                }
                else_if = {                                                                                       ## If Greece is the defender
                    limit = { 
                        FROM = { original_tag = GRE } 
                    }                                                    
                    hidden_effect = {
                        set_temp_variable = { x = ROOT.milslent@GRE }
                        multiply_temp_variable = { x = -1 }
                        round_temp_variable = x
                        FROM = { add_offsite_building = { type = arms_factory level = x } }
                        set_temp_variable = { x = ROOT.civslent@GRE }
                        multiply_temp_variable = { x = -1 }
                        FROM = { add_offsite_building = { type = industrial_complex level = x } }
                    }
                }
            }
        }
    }

    on_army_leader_won_combat = {
        effect = {
            if = {
                limit = {
                    FROM = { original_tag = GRE }
                    check_variable = { GRE.preparedness_level < 1 }
                }
                calculate_chances_of_death_and_surrender_win = yes
                random_army_leader = {
                    limit = {
                        is_assigned = no 
                        NOT = { has_trait = gre_critically_wounded }
                    }
                    calculate_chances_of_death_and_surrender_win = yes
                }
                random_army_leader = {
                    limit = {
                        is_assigned = no
                        NOT = { has_trait = gre_critically_wounded }
                    }
                    calculate_chances_of_death_and_surrender_win = yes
                }
            }
        }
    }
    
    on_army_leader_lost_combat = {
        effect = {
            if = {
                limit = {
                    FROM = { original_tag = GRE }
                    check_variable = { GRE.preparedness_level < 1 }
                }
                calculate_chances_of_death_and_surrender_lose = yes
                random_army_leader = {
                    limit = { 
                        is_assigned = no 
                        NOT = { has_trait = gre_critically_wounded } 
                    }
                    calculate_chances_of_death_and_surrender_win = yes
                }
                random_army_leader = {
                    limit = { 
                        is_assigned = no 
                        NOT = { has_trait = gre_critically_wounded } 
                    }
                    calculate_chances_of_death_and_surrender_win = yes
                }
            }
        }
    }

    on_army_leader_daily = {
        effect = {
            if = {
                limit = {
                    FROM = {
                        original_tag = GRE
                        has_war = yes
                    }
                    NOT = { has_trait = gre_combat_adversities }
                    assigned_has_unpreparedness_level = yes
                }
                adversities_pop_chance = yes
            }
        }
    }

    ###################################################################################################################################################################################################################################               
    ##########################################################################[                                                                                         ]##############################################################
    ##########################################################################[                           CONTINGENCY WAR PLANS SCRIPTED EFFECTS                        ]##############################################################
    ##########################################################################[                                                                                         ]##############################################################
    ###################################################################################################################################################################################################################################

    on_peaceconference_ended = { 
        effect = { 
            if = {
                limit = { 
                    ROOT = { tag = GRE }
                    has_global_flag = greek_contingency_war_started
                }
                for_each_scope_loop = {
					array = global.contingency_enemies

                    if = {
                        limit = { is_faction_leader = yes }
                    	dismantle_faction = yes
                    }
				}
                clr_global_flag = greek_contingency_war_started
                clear_array = global.contingency_enemies
            }
        }
    }

    on_daily_GRE = {
        effect = {
            if = { 
                limit = { has_global_flag = greek_contingency_war_started }
                add_to_variable = { contingency_war_counter = 1 }   
            }
        }
    }

    on_weekly_ITA = {
        effect = {
            if = {
                limit = {
                    has_country_leader = {
                        name = "Benito Mussolini" 
                        ruling_only = yes
                    }
                    is_in_array = {
                        array = global.contingency_enemies
                        value = THIS.id
                    }
                    has_global_flag = fall_of_france
                }
                leave_faction = yes 
                GER = { add_to_faction = PREV }
            }
        }
    }
    
    ###################################################################################################################################################################################################################################               
    ##########################################################################[                                                                                         ]##############################################################
    ##########################################################################[                            GRECO ITALIAN WAR SCRIPTED EFFECTS                           ]##############################################################
    ##########################################################################[                                                                                         ]##############################################################
    ###################################################################################################################################################################################################################################
    
	on_war_relation_added = {                                                                                                   ### This is when Italy declares war on Greece (in the historical manner)
		effect = {
			if = {
				limit = {
                    tag = ITA
					FROM = { 
                        tag = GRE
					}
                    NOT = { has_global_flag = first_grecoitalian }
				}
                ##########################################[Greek Effects]##########################################
                GRE = { add_political_power = 1000 }
                set_global_flag = first_grecoitalian                                                                              # Make sure this only happens once.
                GRE = {
                    add_dynamic_modifier = { modifier = GRE_war_strain }    ## testing for older savegames
                    set_global_flag = GRE_grecoitalian_start
                    set_country_flag = GRE_stop_checking_fortifications                                                          ## Stops checking for fortifications on the Italian border w/ Albania.
                    set_variable = { grecoitalian_war_counter = 0 }
                    if = {                                                                                                       ## Basically make sure the mission of holding the line only activates if the Italians enact a war while bordering Greece (other case is Greece provoked them so they won't have claimed an easy victory as they did historically)
                        limit = {
                            ITA = { is_neighbor_of = GRE }
                        }
                        activate_mission = GRE_stabilize_the_line
                    }
                    if = {                                                                                                       ## Start calculating what was done to give the proper bonuses (or nerfs).
                        limit = {
                            NOT = { has_completed_focus = GRE_rearmament }
                        }
                        set_variable = { GRE_metaxas_army_prepared_level = 1 }
                    }
                    else_if = {
                        limit = {
                            check_variable = { var = GRE_army_reform_cnt value = 5 compare = less_than }
                        }
                        set_variable = { GRE_metaxas_army_prepared_level = 2 }
                        complete_national_focus = GRE_ochi
                    }
                    else_if = {
                        limit = {
                            check_variable = { var = GRE_army_reform_cnt value = 5 compare = greater_than_or_equals }
                            check_variable = { var = GRE_army_reform_cnt value = 10 compare = less_than }
                        }
                        set_variable = { GRE_metaxas_army_prepared_level = 3 }
                        if = {
                            limit = {
                                NOT = { has_country_flag = GRE_metaxas_army_mobilized }
                            }
                            activate_decision = army_buffs
                        }
                        complete_national_focus = GRE_ochi
                        complete_national_focus = GRE_hellenic_passion
                        complete_national_focus = GRE_entrenching
                    }
                    else_if = {
                        limit = {
                            check_variable = { var = GRE_army_reform_cnt value = 10 compare = greater_than_or_equals }
                        }
                        set_variable = { GRE_metaxas_army_prepared_level = 4 }
                        if = {
                            limit = {
                                NOT = { has_country_flag = GRE_metaxas_army_mobilized }
                            }
                            activate_decision = army_buffs
                        }
                        complete_national_focus = GRE_ochi
                        complete_national_focus = GRE_hellenic_passion
                        complete_national_focus = GRE_stabilizing_the_line
                        complete_national_focus = GRE_entrenching
                        complete_national_focus = GRE_population_sacrifice
                        complete_national_focus = GRE_army_organized
                    }
                    if = {
                        limit = { GRE = { has_country_flag = GRE_bulgarian_preemptive_strike_prepared } }
                        complete_national_focus = GRE_turn_attention_back_to_metaxas_line
                    }
                }
                ##########################################[Italian Effects]##########################################
                if = {
                    limit = {
                        GRE = { NOT = { is_in_faction_with = ENG } }
                        YUG = { 
                            NOT = { is_in_faction_with = GER }
                            NOT = { has_war_with = GER }
                            NOT = { has_war_with = ITA }
                            NOT = { has_capitulated = yes }
                            exists = yes     
                        }
                        BUL = {
                            #NOT = { is_in_faction_with = GER }
                            NOT = { has_war_with = GRE }
                        }
                    }                    
                    ITA = {
                        add_ideas = GRE_italian_ambition                                                                         ## Basically stops the Italians from calling any allies to the war (historical). To make the player also wanna do the same, if Italy doesn't call anyone and wins the war, then the entirety of Greece will fall under her control.
                        #stop_italians_manning_bulgarian_borders = yes                                                            # Obsolete AI tweaks (incorporated into AI behavior file).
                    }
                    #GER = { 
                        #GRE_set_germans_unwilling = yes 
                    #}
                }
                ##########################################[Bulgarian Effects]##########################################
                if = {
                    limit = {
                        check_variable = { var = TUR.favor@GRE value = 50 compare = less_than }                                 ### Historically, Mussolini invited the Bulgarians to attack with him, offering some of their claimed land back, however, they could not do so as a)they were not ready yet, b) Turkey threatened Bulgaria to intervene if they intervened so they had to wait out the Germans. 
                        NOT = { has_country_flag = GRE_balkan_pact_members_rallied_against_bulgarians }                         ### Here Bulgarians are stopped by the Turks if Greece has sufficient influence/favor over them and went through the exoteriki politiki path.
                        NOT = { has_country_flag = GRE_requested_axis_support_over_the_bulgarian_matter }                       ### Here we have an alternative choice where the player chose to court the Axis over limiting the Bulgarians
                        BUL = { 
                            exists = yes 
                            is_puppet = no
                            is_subject = no
                        }
                    }
                    BUL = {                                                                                                     ### If Greece has done nothing to counter the Bulgarian threat, either take them on, enact diplomatic ties with Balkan pact members or even ask the Axis to keep them out of the ring, then
                        declare_war_on = {                                                                                      ### Bulgaria accepts Italy's offer and declares war on Greece
                            target = GRE
                            type = take_state_focus
                            generator = { 731 184 }
                        }                        
                        add_ideas = GRE_bulgarian_ambition                                                                      ### Bulgarian ambition is similar to the Italian one, where they get to keep all of Thrace/Macedonia IF they only fight with the Italians
                        # GRE = { country_event = { id = hellas.x days = 0 } }                                                  ### Greece gains event informing them of Italian-Bulgarian plans
                    }
                }
                ##########################################[Allies Effects]############################################
                ##########################################[German Effects]############################################
                #if = {                                                                                                         ### Obsolete AI tweaks for the Germans. Incorporated in the AI behavior file.
                #    limit = {
                #        check_variable = { var = GER.favor@GRE value = 50 compare = greater_than_or_equals }
                #        #has_country_flag = GRE_grecogerman_tradedeal_accepted
                #        NOT = { is_in_faction_with = ENG }
                #    }
                #    GER = { 
                #        #set_country_unwilling_to_help_bulgaria = yes 
                #    }
                #}
                ##########################################[Yugoslavian Effects]#######################################
                ##########################################[Turkish Effects]###########################################
                ##########################################[Romanian Effects]##########################################
			}           
        }
    } 

    
    on_declare_war = {                                                                                                          ### A dash for Sofia mission
		effect = {
			if = {
				limit = {
                    original_tag = GRE
                    has_completed_focus = GRE_turn_attention_back_to_metaxas_line
					FROM = { 
                        original_tag = BUL
					}
				}
                ##########################################[No Intervention Scenario]#######################################
                if = {
                    limit = {
                        check_variable = { var = GER.favor@GRE value = 80 compare = greater_than_or_equals }
                        GER = { NOT = { has_war_with = YUG } }
                        NOT = { is_in_faction_with = ENG }
                        ITA = { 
                            OR = {
                                has_idea = GRE_italian_ambition
                                has_idea = GRE_italian_ambition_defensive
                                has_idea = GRE_italian_ambition_ultra_offensive
                            }
                        }
                    }
                    every_country = {
                        limit = {
                            is_in_faction_with = BUL
                            NOT = { original_tag = BUL } 
                        }
                        set_country_unwilling_to_help_bulgaria = yes 
                    }
                    BUL = { 
                        add_timed_idea = {
                            idea = GRE_bulgarian_ambition
                            days = 30
                        } 
                    } 
                }
                ############################################################################################################
			}           
        }
    }
    
    on_war_relation_added = {                                                                               ### This is when Germany/Italy declares war on Yugoslavia.
		effect = {
			if = {
				limit = {
                    OR = {
                        original_tag = ITA
                        original_tag = GER
                    }
					FROM = { 
                        original_tag = YUG
					}
				}
                ITA = {
                    remove_ideas = GRE_italian_ambition
                    remove_ideas = GRE_italian_ambition_defensive
                    remove_ideas = GRE_italian_ambition_ultra_offensive                                       # If Germany declares by its own, it is possible it will happen during some italian offensives, thus keeping the national spirit after they end.
                }
                GER = {
                    #add_ideas = GRE_german_ambition
                    add_timed_idea = {
                        idea = GRE_german_ambition
                        days = 120
                    } 
                }
                GRE = { 
                    set_country_flag = german_ambassador_6th
                }
			}           
        }
    }
    
    on_capitulation = {
        effect = {
            if = {
                limit = {
                    ROOT = { original_tag = GRE }
                }
                clr_global_flag = GRE_grecoitalian_start
                clr_global_flag = GRE_crete_still_holding
                set_global_flag = GRE_government_in_exile
                complete_national_focus = GRE_crete_falls
                GRE = { country_event = { id = hellas.1500 days = 0 } }
                GRE = { country_event = { id = hellas.10000 days = 0 } }
                GER = { remove_ideas = GRE_german_ambition_crete }
            }
        }
    }
    
    on_capitulation = {
        effect = {
            if = {
                limit = {
                    ROOT = { original_tag = ITA }
                    GRE = {
                        NOT = { has_war_with = GER }
                        NOT = { has_war_with = BUL }
                    }
                    has_global_flag = Metaxas_Ribbentrop_Pact
                }
                clr_global_flag = GRE_grecoitalian_start
                set_global_flag = GRE_grecoitalian_ended
                GRE = { country_event = { id = hellas.119 days = 0 } }
            }
        }
    }

    on_capitulation = {
        effect = {
            if = {
                limit = {
                    ROOT = { original_tag = BUL has_war_with = GRE }
                    check_variable = { GRE.preemptive_war@BUL = 1 }
                }
                GRE = { country_event = { id = hellas.3205 days = 0 } }
                TUR = { country_event = { id = hellas.3205 days = 0 } }
                ROM = { country_event = { id = hellas.3205 days = 0 } }
                YUG = { country_event = { id = hellas.3205 days = 0 } }
            }
        }
    }
    
    
    on_daily_GRE = {
        effect = {
            #################################################################################################################
            ##########################################[Greco-Italian War Daily Checks]#######################################
            #################################################################################################################
            if = {
                limit = {
                    has_global_flag = GRE_grecoitalian_start
                }
                add_to_variable = { grecoitalian_war_counter = 1 }                                           ## First and foremost, set the counter (counts days since start of war, possibly better than just checking global flag constantly)
            
                if = {
                    limit = {
                        NOT = { has_global_flag = Metaxas_Ribbentrop_Pact }
                        #date = 1941.04.06
                        date > 1941.04.05
                    }
                    set_variable = { date_of_directive_date = global.date }
                    GER = { country_event = { id = hellas.104 days = 0 } }                                   ## Fuhrer Directive event sent to Germans.
                    country_event = { id = hellas.996 days = 0 } 
                }
                else_if = {
                    limit = {
                        has_global_flag = Metaxas_Ribbentrop_Pact
                        MR_deadline_trigger = yes
                    }
                    clr_global_flag = Metaxas_Ribbentrop_Pact
                    set_variable = { date_of_directive_date = global.date }
                    GER = { country_event = { id = hellas.104 days = 0 } }                                   ## Fuhrer Directive event sent to Germans.
                    country_event = { id = hellas.996 days = 0 } 
                }
                if = {
                    limit = {
                        GRE = { NOT = { controls_state = 913 } }
                    }
                    GRE = { 
                        country_event = { id = hellas.998 days = 0 }                                         ## Germans enter thess.
                    } 
                }
                if = {
                    limit = {
                        GRE = { NOT = { controls_state = 913 } }
                        GRE = { NOT = { controls_state = 910 } }
                    }
                    GRE = { 
                        country_event = { id = hellas.999 days = 0 }                                         ## Koryzis suicide (way #2)
                    } 
                }
                if = {
                    limit = {
                        GRE = { NOT = { controls_state = 47 } }
                        GRE = { NOT = { controls_state = 913 } }
                    }
                    GRE = { 
                        country_event = { id = hellas.1001 days = 0 } 
                        set_country_flag = mainland_capitulated
                    } 
                }
                if = {
                    limit = {
                        check_variable = { grecoitalian_war_counter = 150 }
                    }
                    country_event = { id = hellas.798 days = 0 }                                              # Greek Army reforms buffs start to fade out.
                }
                if = {
                    limit = {
                        check_variable = { grecoitalian_war_counter = 280 }
                    }
                    country_event = { id = hellas.799 days = 0 }                                              # Greek Army reforms gone.
                }
                if = {
                    limit = {
                        check_variable = { grecoitalian_war_counter > 420 }
                        NOT = { has_country_flag = event800_sent }
                    }
                    set_country_flag = event800_sent
                    country_event = { id = hellas.800 days = 0 }
                }
            }
        }
        effect = {
            ####################################################################################################################
            ##########################################[Occupation of Greece Daily Checks]#######################################
            ####################################################################################################################
            if = {
                limit = { has_axis_occupation=yes }
                ##################################################################
                add_to_variable = { days_of_oppression = 1 }                                                                                            # Counter
                for_each_scope_loop = {
                    array=GRE.occupier_nations
                    add_to_variable = { calm_days@GRE = 1 }                                                                                             # Counter for Calm Days
                    add_to_variable = { PERSONALITY_DAYS@GRE = 1 }                                                                                      # Counter for Personality Days
                }
                ##################################################################
                #HS_add_daily_agitation_to_states = yes                                                                                                  # Adds daily agitation to states off modifier_token
                #HS_add_daily_andartes_to_states = yes                                                                                                   # Adds daily andartes to states
                #HS_set_daily_base_reconnaissance = yes                                                                                                  # Sets base recon
                HS_add_daily_combined_modifiers = yes                                                                                                   # All of the above but with 1 loop for better performance.
                GRE_calculate_government_in_exile = yes                                                                                                 # Update Government in Exile dynamic modifier
                ##################################################################      
                if = {
                    limit = { 
                        event_target:hellenic_state = { 
                            exists = yes
                            has_stability < 0.01                                                                                                        # Stability hits 0%
                        } 
                    }
                    country_event = { id = hellas.1009 days = 0 }                                           
                    event_target:hellenic_state = { country_event = { id = hellas.1009 days = 0 } }
                }
                ##################################################################
                if = {                                                                                                                                 ## Fate of Crete
                    limit = {
                        check_variable = { days_of_oppression > 35 }
                        has_global_flag = GRE_crete_still_holding
                        NOT = { 
                            has_completed_focus = GRE_crete_holds 
                            has_completed_focus = GRE_crete_falls
                        }
                    }
                    complete_national_focus = GRE_crete_holds
                    GRE = { country_event = { id = hellas.1500 days = 0 } }
                    GRE = { country_event = { id = hellas.10000 days = 0 } }
                }
                if = {                                                                                                                                 ## Hellenic State has formed AND exists (flag clears later)
                    limit = { 
                        #date = 1941.9.1
                        date > 1941.9.1
                    }
                    country_event = { id = hellas.1010 days = 14 }                                                                                      # Event to warn about famine (event takes on and procs famine later)
                    event_target:hellenic_state = { country_event = { id = hellas.1010 days = 14 } }
                }
                if = {                                                                                                                                 ## Start of the Famine 
                    limit = { 
                        #date = 1941.11.1
                        date > 1941.9.1 
                    }
                    set_variable = { global.famine_start_date = global.num_days }
                    country_event = { id = hellas.1011 days = 0 }                                                                                           
                    event_target:hellenic_state = { country_event = { id = hellas.1011 days = 0 } }
                }
                if = {
                    limit = { has_global_flag=GRE_famine_started }
                    event_target:hellenic_state = { HS_FAM_calculate_stability_penalty=yes }
                    for_each_scope_loop = {
                        array = global.greek_occupied_states_all
                        THIS = { HS_FAM_toll_proc = yes }                                                                                            # Procs Famine Deaths daily
                    }
                }
                if = {                                                                                                                                  # Starts increasing resistance numbers
                    limit = {
                        date > 1942.9.1
                    }
                    HS_resistance_manpower_increase = yes
                }
                if = {                                                                                                                                  # Kostis Palamas Funeral
                    limit = {
                        date > 1943.2.27
                    }
                    country_event = { id = hellas.1501 days = 0 }
                    event_target:hellenic_state = { country_event = { id = hellas.1501 days = 0 } }
                }
            }
        }
    }

    on_weekly_GRE = {
        effect = {
            if = { 
                limit = { has_axis_occupation=yes }
                HS_FAM_set_base_state_level=yes
            }
        }
    }

    on_monthly_GRE = {
        effect = {
            for_each_scope_loop = {
                array=GRE.occupier_nations
                HS_GAR_monthly_replenishment_effect_for_THIS = yes
                HS_GAR_overall_distribution_for_THIS = yes
                HS_GAR_calculate_total_garrison_in_mainland_states_for_THIS=yes
            }
        }
    }
}