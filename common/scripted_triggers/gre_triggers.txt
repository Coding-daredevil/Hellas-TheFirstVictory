####################################
#######[ Influence Triggers]########
####################################

is_important_nation_to_add_to_array = {
    # This trigger calculates whether the current scope is significant enough to add as an important nation.

    var:THIS.capital = { set_temp_variable = { x=distance_to@GRE.capital }}
    if = {
        limit = { check_variable={ x<GRE.influence_radius }}                                                                                     # We check whether the capitals' distance is within the influence radius of Greece.
        set_temp_variable={ main_cond=1 }
    }
    else={ set_temp_variable={ main_cond=0 }}
    ######################
    if = {
        limit = { check_variable={ main_cond=0 }}
        if = {
            limit = { OR={ is_in_array={ array=GRE.balkan_neighbors value=THIS.id} AND={ is_major=yes var:capital={is_on_continent=europe }}}}       # We always want Balkan Neighbors & European Major Powers.
            always=yes
        }
        else_if = {
            limit = { is_major=yes var:capital={is_on_continent=north_america }}
            OR = { has_completed_focus=GRE_bedrock_of_balkan_financial_stability has_completed_focus=GRE_open_foreign_subsidized_factories }         # We add USA (north america majors) once Greece starts becoming important
        }
        else_if = {
            limit = { is_major=yes var:capital={is_on_continent=asia }}
            OR = { has_completed_focus=GRE_invest_into_the_far_east has_completed_focus=GRE_extend_arms_sales_to_the_chinese has_completed_focus=GRE_arm_the_japanese has_completed_focus=GRE_arm_the_communists }          # We add Asian Majors a bit early if we start invest.
        }
        else_if = {                                                                                                                                  # We add asian nations if we have completed the focus.
            limit = { is_major=no var:capital={is_on_continent=asia }}
            has_completed_focus = GRE_invest_into_the_far_east
        }
        else = { always=no }                                                                                                                         # Otherwise, not an important nation
    }
    else = { always=yes }
}

####################################
####[ SinoJapanese War Triggers ]###
####################################

sinojapanese_war_is_ongoing = {
    custom_trigger_tooltip={
        tooltip = sinojapanese_war_is_ongoing_tt
        any_country = {
            OR = { tag=YUN tag=SIK tag=GXC tag=SHX tag=XSM tag=CHI tag=PRC }
            has_war_with=JAP
        }
    }
}

####################################
####[ Spanish Civil War Triggers]###
####################################

spanish_civil_war_is_ongoing = {
    custom_trigger_tooltip = {
        tooltip = GRE_spanish_civil_war_underway_tt
        has_global_flag = spanish_civil_war
        any_country_with_original_tag = {
            original_tag_to_check=SPR
            has_civil_war = yes
        }
    }
}

is_FROM_involved_in_spain_in_any_manner_possible = {
    any_country_with_original_tag={
        original_tag_to_check=SPR
        OR={
            has_volunteers_amount_from={ tag=FROM count>0 }
            FROM={ is_lend_leasing=PREV }
            FROM={ is_licensing_any_to=PREV}
            has_attache_from=FROM
        }
    }
}

####################################
##########[ COC_GUI TRIGG ]#########
####################################

meets_promotion_criteria = {
    if = { limit = { is_character = GRE_alexandros_papagos }             set_temp_variable = { crank=GRE.hc_papagos_rank } }
    else_if = { limit = { is_character = GRE_markos_drakos }             set_temp_variable = { crank=GRE.hc_drakos_rank } }
    else_if = { limit = { is_character = GRE_georgios_stanotas }         set_temp_variable = { crank=GRE.hc_stanotas_rank } }
    else_if = { limit = { is_character = GRE_napoleon_zervas }           set_temp_variable = { crank=GRE.hc_zervas_rank } }
    else_if = { limit = { is_character = GRE_nikolaos_plastiras }        set_temp_variable = { crank=GRE.hc_plastiras_rank } }
    else_if = { limit = { is_character = GRE_charalambos_katsimitros }   set_temp_variable = { crank=GRE.hc_katsimitros_rank } }
    else_if = { limit = { is_character = GRE_georgios_kosmas }           set_temp_variable = { crank=GRE.hc_kosmas_rank } }
    else_if = { limit = { is_character = GRE_odysseas_aggelis }          set_temp_variable = { crank=GRE.hc_aggelis_rank } }
    else_if = { limit = { is_character = GRE_konstantinos_davakis }      set_temp_variable = { crank=GRE.hc_davakis_rank } }
    else_if = { limit = { is_character = GRE_ioannis_sotiris_alexakis }  set_temp_variable = { crank=GRE.hc_alexakis_rank } }
    else_if = { limit = { is_character = GRE_aris_velouchiotis }         set_temp_variable = { crank=GRE.hc_velouchiotis_rank } }
    else_if = { limit = { is_character = GRE_evripidis_bakirtzis }       set_temp_variable = { crank=GRE.hc_bakirtzis_rank } }
    else_if = { limit = { is_character = GRE_alexandros_rossios }        set_temp_variable = { crank=GRE.hc_rossios_rank } }
    else_if = { limit = { is_character = GRE_alexandros_sakellariou }    set_temp_variable = { crank=GRE.hc_sakellariou_rank} }
    else_if = { limit = { is_character = GRE_ioannis_demestichas }       set_temp_variable = { crank=GRE.hc_demestichas_rank} }
    else_if = { limit = { is_character = GRE_epameinondas_kavvadias }    set_temp_variable = { crank=GRE.hc_kavvadias_rank} }
    else_if = { limit = { is_character = GRE_dimitrios_loundras }        set_temp_variable = { crank=GRE.hc_loundras_rank} }
    else_if = { limit = { is_character = GRE_dimitrios_oikonomou }       set_temp_variable = { crank=GRE.hc_oikonomou_rank} }
    else_if = { limit = { is_character = GRE_ioannis_toubas }            set_temp_variable = { crank=GRE.hc_toubas_rank} }
    else_if = { limit = { is_character = GRE_petros_voulgaris }          set_temp_variable = { crank=GRE.hc_voulgaris_rank} }
    else_if = { limit = { is_character = GRE_spyridon_avgeris }          set_temp_variable = { crank=GRE.hc_avgeris_rank} }
    else_if = { limit = { is_character = GRE_miltiadis_iatridis }        set_temp_variable = { crank=GRE.hc_iatridis_rank} }
    else_if = { limit = { is_character = GRE_pyrros_spyromilios }        set_temp_variable = { crank=GRE.hc_spyromilios_rank} }
    custom_trigger_tooltip = { tooltip="  " always=yes }
    not_psd=yes
    if = {
        limit={ check_variable={ crank=0 }}
        if={ limit={ is_army_leader=yes } has_army_experience>25 }
        else_if={ limit={ is_navy_leader=yes } has_navy_experience>25 }
        command_power > 25
    }
    else_if = {
        limit={ check_variable={ crank=1 }}
        if={ limit={ is_army_leader=yes } has_army_experience>50 }
        else_if={ limit={ is_navy_leader=yes } has_navy_experience>50 }
        command_power > 50
    }
    else_if = {
        limit={ check_variable={ crank=2 }}
        if={ limit={ is_army_leader=yes } has_army_experience>75 }
        else_if={ limit={ is_navy_leader=yes } has_navy_experience>75 }
        command_power > 75
    }
    else_if = {
        limit={ check_variable={ crank=3 }}
        if={ limit={ is_army_leader=yes } has_army_experience>100 }
        else_if={ limit={ is_navy_leader=yes } has_navy_experience>100 }
        command_power > 100
    }
}

####################################
########[ DIPLOMATIC TRIGG ]########
####################################

is_balkan_nation = {
    OR={original_tag=TUR original_tag=YUG original_tag=BUL original_tag=ALB original_tag=ROM original_tag=HUN original_tag=AUS original_tag=CZE}
}

mussolini_historical_tensions_with_greece = {
    # The following trigger checks whether historical conditions still occur between Mussolini/Italy and Greece. 

    custom_trigger_tooltip = {
        tooltip = mussolini_historical_tensions_with_greece_tt

        ITA = {
            ITA_benito_mussolini = { is_country_leader=yes }
            NOT = { 
                OR={ 
                    is_justifying_wargoal_against=GRE 
                    has_war_with=GRE 
                    focus_progress={ focus=ITA_greece_war_goal progress>0.01 }}
                    has_completed_focus = ITA_greece_war_goal
                    has_completed_focus = ITA_greece_friend
                }
            exists=yes 
            is_puppet=no 
            is_subject=no 
        }
    }
}

forts_in_grecoalbanian_borderline_exist = {
    OR = {
        184 = { any_province_building_level={ province={ id=13236 id=13237 } building=bunker level>0 }}
        838 = { any_province_building_level={ province={ id=841 } building=bunker level>0 }}
    }
}

annexation_of_albania_has_occurred_one_way_or_another = {
    # The following trigger considers cases where Albania was puppeted instead of capitulated

    custom_trigger_tooltip = {
        tooltip = annexation_of_albania_has_occurred_one_way_or_another_tt

        ALB = {
            OR = { exists=no AND={ exists=yes OR={ is_subject_of=ITA is_puppet_of=ITA }}}
        }
    }
}

has_opposing_ideology_from_tmpCID = {
    # The following trigger checks if THIS scope has opposing ideology from tmpCID tag.
    custom_trigger_tooltip = {
        tooltip = has_opposing_ideology_tt
        if = { limit={ var:tmpCID={ has_government=democratic } } OR={ has_government=fascism has_government=communism }}
        else_if = { limit={ var:tmpCID={ has_government=fascism } } OR={ has_government=democratic has_government=communism }}
        else_if = { limit={ var:tmpCID={ has_government=communism } } OR={ has_government=democratic has_government=fascism }}
        else = { always=no }
    }
}

####################################
########[ Eastern Prospect ]########
####################################

has_completed_appropriate_ep_focuses_FROM = {
    if = {
        limit = { FROM = { original_tag = CHI } }
        GRE = { has_completed_focus = GRE_extend_arms_sales_to_the_chinese }
    }
    else_if = {
        limit = { FROM = { original_tag = JAP } }
        GRE = { has_completed_focus = GRE_arm_the_japanese }
    } 
    else_if = {
        limit = { FROM = { original_tag = PRC } }
        GRE = { has_completed_focus = GRE_arm_the_communists }
    }
}

########################################################################################
##############################[ FOREIGN MANUFACTURER ADD ]##############################
########################################################################################

has_completed_appropriate_fm_focuses = {
    if = {
        limit = { FROM = { original_tag = GER } }
        GRE = { has_completed_focus = GRE_bolster_the_schachtplan }
    }
    else_if = {
        limit = { FROM = { original_tag = ENG } }
        GRE = { has_completed_focus = GRE_british_docking_rights }
    } 
    else_if = {
        limit = { FROM = { original_tag = FRA } }
        GRE = { has_completed_focus = GRE_renegotiate_debt_with_france }
    }             
    else_if = {
        limit = { FROM = { original_tag = SOV } }
        GRE = { has_completed_focus = GRE_appeal_to_the_soviet_union }
    } 
    else_if = {
        limit = { FROM = { original_tag = USA } }
        GRE = { has_completed_focus = GRE_american_influencers }
    } 
    else_if = {
        limit = { FROM = { original_tag = JAP } }
        GRE = { has_completed_focus = GRE_arm_the_japanese }
    }
    else_if = {
        limit = { FROM = { original_tag = ITA } }
        GRE = { has_completed_focus = GRE_rapprochement_with_the_italians }
    }
}

has_appropriate_electrical_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        has_idea = GRE_siemens
    }
    else_if = {
        limit = {
            FROM = { original_tag = ENG }
        }
        has_idea = GRE_english_electric
    }
    else_if = {
        limit = {
            FROM = { original_tag = USA }
        }
        has_idea = GRE_general_electric
    }  
}

has_appropriate_industrial_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        has_idea = GRE_krupp
    }
    else_if = {
        limit = {
            FROM = { original_tag = SOV }
        }
        has_idea = GRE_stalingrad_tractor_factory
    } 
}

has_appropriate_materiel_art_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        has_idea = GRE_rheinmetall
    }
    else_if = {
        limit = {
            FROM = { original_tag = FRA }
        }
        has_idea = GRE_mas
    }             
    else_if = {
        limit = {
            FROM = { original_tag = SOV }
        }
        has_idea = GRE_grabin_design_bureau
    } 
    else_if = {
        limit = {
            FROM = { original_tag = USA }
        }
        has_idea = GRE_springfield_armory
    }  
}


has_appropriate_materiel_mot_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = JAP }
        }
        has_idea = GRE_nissan
    }
    else_if = {
        limit = {
            FROM = { original_tag = ITA }
        }
        has_idea = GRE_lancia
    }  
}

has_appropriate_materiel_infeq_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        has_idea = GRE_mauser
    }
    else_if = {
        limit = {
            FROM = { original_tag = ENG }
        }
        has_idea = GRE_rsaf_enfield
    }          
    else_if = {
        limit = {
            FROM = { original_tag = SOV }
        }
        has_idea = GRE_tula_arms_plant
    }
}

has_appropriate_materiel_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        OR = {
            has_idea = GRE_mauser
            has_idea = GRE_rheinmetall
        } 
    }
    else_if = {
        limit = {
            FROM = { original_tag = ENG }
        }
        has_idea = GRE_rsaf_enfield
    } 
    else_if = {
        limit = {
            FROM = { original_tag = FRA }
        }
        has_idea = GRE_mas
    }             
    else_if = {
        limit = {
            FROM = { original_tag = SOV }
        }
        OR = {
            has_idea = GRE_tula_arms_plant
            has_idea = GRE_grabin_design_bureau
        }
    } 
    else_if = {
        limit = {
            FROM = { original_tag = USA }
        }
        has_idea = GRE_springfield_armory
    } 
    else_if = {
        limit = {
            FROM = { original_tag = JAP }
        }
        has_idea = GRE_nissan
    }
    else_if = {
        limit = {
            FROM = { original_tag = ITA }
        }
        has_idea = GRE_lancia
    }  
}

has_appropriate_aircraft_fm_selected = {
    if = {
        limit = {
            FROM = { original_tag = GER }
        }
        has_idea = GRE_junkers
    }
    else_if = {
        limit = {
            FROM = { original_tag = ENG }
        }
        has_idea = GRE_supermarine
    } 
    else_if = {
        limit = {
            FROM = { original_tag = FRA }
        }
        has_idea = GRE_bloch
    }             
    else_if = {
        limit = {
            FROM = { original_tag = SOV }
        }
        has_idea = GRE_mig_design_bureau
    } 
    else_if = {
        limit = {
            FROM = { original_tag = USA }
        }
        has_idea = GRE_boeing
    } 
    else_if = {
        limit = {
            FROM = { original_tag = JAP }
        }
        has_idea = GRE_yokosuka
    }  
}

has_appropriate_naval_fm_selected = {
    if = {
        limit = { FROM = { original_tag = GER } }
        GRE = { has_idea = GRE_blohm_und_voss }
    }
    else_if = {
        limit = { FROM = { original_tag = ENG } }
        GRE = { has_idea = GRE_john_brown_company }
    }
    else_if = {
        limit = { FROM = { original_tag = USA } }
        GRE = { has_idea = GRE_electric_boat_company }
    } 
    else_if = {
        limit = { FROM = { original_tag = JAP } }
        GRE = { has_idea = GRE_kure_naval_arsenal }
    }
}

has_appropriate_armor_fm_selected = {
    if = {
        limit = { FROM = { original_tag = GER } }
        GRE = { has_idea = GRE_man }
    }
    else_if = {
        limit = { FROM = { original_tag = ENG } }
        GRE = { has_idea = GRE_vickers_armstrong }
    } 
    else_if = {
        limit = { FROM = { original_tag = FRA } }
        GRE = { has_idea = GRE_AMX }
    }             
    else_if = {
        limit = { FROM = { original_tag = SOV } }
        GRE = { has_idea = GRE_astrov_design_bureau }
    } 
    else_if = {
        limit = { FROM = { original_tag = USA } }
        GRE = { has_idea = GRE_chrysler }
    } 
    else_if = {
        limit = { FROM = { original_tag = JAP } }
        GRE = { has_idea = GRE_osaka_army_arsenal }
    }
    else_if = { 
        limit = { FROM = { original_tag = ITA } }
        GRE = { has_idea = GRE_fiat }
    } 
}

#####################################
############[Faction ARMY]###########
#####################################

is_faction_tmpF_hostile = {
    if = {
        limit = { check_variable = { tmpF = 0 } }                      #Monarchists
        check_variable = { GRE.fct_mon < 40 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 1 } }                      #Republicans
        check_variable = { GRE.fct_dem < 40 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 2 } }                      #Communists
        check_variable = { GRE.fct_com < 40 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 3 } }                      #Fascists
        check_variable = { GRE.fct_fas < 40 }
    }
}

is_faction_tmpF_neutral = {
    if = {
        limit = { check_variable = { tmpF = 0 } }                      #Monarchists
        check_variable = { GRE.fct_mon > 39.99 }
        check_variable = { GRE.fct_mon < 60.00 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 1 } }                      #Republicans
        check_variable = { GRE.fct_dem > 39.99 }
        check_variable = { GRE.fct_dem < 60.00 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 2 } }                      #Communists
        check_variable = { GRE.fct_com > 39.99 }
        check_variable = { GRE.fct_com < 60.00 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 3 } }                      #Fascists
        check_variable = { GRE.fct_fas > 39.99 }
        check_variable = { GRE.fct_fas < 60.00 }
    }
}

is_faction_tmpF_positive = {
    if = {
        limit = { check_variable = { tmpF = 0 } }                      #Monarchists
        check_variable = { GRE.fct_mon > 59.99 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 1 } }                      #Republicans
        check_variable = { GRE.fct_dem > 59.99 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 2 } }                      #Communists
        check_variable = { GRE.fct_com > 59.99 }
    }
    else_if = {
        limit = { check_variable = { tmpF = 3 } }                      #Fascists
        check_variable = { GRE.fct_fas > 59.99 }
    }
}


is_faction_tmpF_at_least_tmpZ = {
    if = {
        limit = { check_variable = { tmpF = 0 } }                                           #Monarchists
        check_variable = { var=GRE.fct_mon value=tmpZ compare=greater_than_or_equals }
    }
    else_if = {
        limit = { check_variable = { tmpF = 1 } }                                           #Republicans
        check_variable = { var=GRE.fct_dem value=tmpZ compare=greater_than_or_equals }
    }
    else_if = {
        limit = { check_variable = { tmpF = 2 } }                                           #Communists
        check_variable = { var=GRE.fct_com value=tmpZ compare=greater_than_or_equals }
    }
    else_if = {
        limit = { check_variable = { tmpF = 3 } }                                           #Fascists
        check_variable = { var=GRE.fct_fas value=tmpZ compare=greater_than_or_equals }
    }
}

is_faction_tmpF_below_tmpZ = {
    if = {
        limit = { check_variable = { tmpF = 0 } }                      #Monarchists
        check_variable = { GRE.fct_mon < tmpZ }
    }
    else_if = {
        limit = { check_variable = { tmpF = 1 } }                      #Republicans
        check_variable = { GRE.fct_dem < tmpZ }
    }
    else_if = {
        limit = { check_variable = { tmpF = 2 } }                      #Communists
        check_variable = { GRE.fct_com < tmpZ }
    }
    else_if = {
        limit = { check_variable = { tmpF = 3 } }                      #Fascists
        check_variable = { GRE.fct_fas < tmpZ }
    }
}

fctF_is_below_tmpZ = {
    custom_trigger_tooltip = {
        tooltip = fct_tmpF_below_tmpZ
        if = {
            limit={ check_variable={ tmpF=0 }}
            check_variable = { fct_mon < tmpZ }
        }
        else_if = {
            limit={ check_variable={ tmpF=1 }}
            check_variable = { fct_dem < tmpZ }
        }
        else_if = {
            limit={ check_variable={ tmpF=2 }}
            check_variable = { fct_com < tmpZ }
        }
        else_if = {
            limit={ check_variable={ tmpF=3 }}
            check_variable = { fct_fas < tmpZ }
        }
    }
}

####################################
###########[Investments]############
####################################

factories_within_investment_limit_FROM_to_GRE = {
    # Base factories = 50, intel on us increases this limit.
    set_temp_variable = { civ_intel_on_gre = FROM.civilian_intel@GRE }
    if = {                                                              #y = -1.25x + 112.5
        limit = {
            check_variable = { FROM.civilian_intel@GRE < 50.00 }
            check_variable = { FROM.civilian_intel@GRE > 9.99 }
        }
        multiply_temp_variable = { civ_intel_on_gre = -1.25 }
        add_to_temp_variable = { civ_intel_on_gre = 112.5 }
        check_variable = { GRE.num_of_factories < civ_intel_on_gre }
    }
    else_if = {
        limit = {
            check_variable = { FROM.civilian_intel@GRE < 10 }
        }
        check_variable = { GRE.num_of_factories < 125.01 }
    }
    else = {
        check_variable = { GRE.num_of_factories < 50.01 }
    }
}

####################################
#####[Metaxas Ribbentrop Pact]######
####################################

MR_deadline_trigger_30_days_prior = {
    if = {
        limit = { check_variable = { GRE.mr_exp_date = 1 } }
        date > 1941.1.1
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 2 } }
        date > 1941.2.1
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 3 } }
        date > 1941.3.5
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 4 } }
        date > 1941.4.1
    }
}

MR_deadline_trigger = {
    if = {
        limit = { check_variable = { GRE.mr_exp_date = 1 } }
        date > 1941.2.1
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 2 } }
        date > 1941.3.1
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 3 } }
        date > 1941.4.5
    }
    else_if = {
        limit = { check_variable = { GRE.mr_exp_date = 4 } }
        date > 1941.5.1
    }
}

####################################
####[Contingency Plans Triggers]####
####################################

contingency_threshold_reached = {
    if = {
        limit = { check_variable = { GRE.contingency_focus_completed@THIS = 1 } }
        always = no
    }
    else = {
        set_temp_variable = { influence_effect = THIS.favor@GRE }
        set_temp_variable = { collaboration_effect = GRE.has_collaboration@THIS }
        multiply_temp_variable = { collaboration_effect = 1.25 }
        add_to_temp_variable = { final_sum = influence_effect }
        add_to_temp_variable = { final_sum = collaboration_effect }
        check_variable = { final_sum > 94.99}
    }
}

has_no_guarantees_from_majors = {
    custom_trigger_tooltip = {
        tooltip = has_no_guarantees_from_majors_tt
        NOT = {
            any_other_country = {
                is_major = yes
                NOT = {
                    original_tag = ITA
                    PREV = { original_tag = ALB }
                }
                has_guaranteed = PREV
            }
        }
    }
}


####################################
####[Greco Italian War Triggers]####
####################################

trigger_italian_war_event = {
    ITA = { has_completed_focus = ITA_greece_war_goal }
    #has_non_aggression_pact_with = ITA
}

yugoslavian_stance_in_greco_italian_war_alliance = {
    check_variable = { YUG.favor@GRE > 79 }
}

yugoslavian_stance_in_greco_italian_war_positive = {
    check_variable = { YUG.favor@GRE > 49 }
}

yugoslavian_stance_in_greco_italian_war_neutral = {
    check_variable = { YUG.favor@GRE > 0 }
}

yugoslavian_stance_in_greco_italian_war_betrayal = {
    check_variable = { YUG.favor@GRE < 0.001 }
}

###

has_fully_realized_the_balkan_pact = {
    has_global_flag = balkan_pact_fully_completed
}

has_enacted_alliance_with_turkey = {
    TUR = {
        OR = {
            has_country_flag = grecoturkish_alliance_offered
            has_country_flag = grecoturkish_eden_plan
        }
    }
}

has_enacted_alliance_with_yugoslavia = {
    YUG = {
        OR = {
            has_country_flag = grecoyugoslav_alliance
            has_country_flag = grecoyugoslav_eden_plan_drawn_out
        }
    }
}


turkish_stance_in_greco_italian_war_alliance = {
    check_variable = { TUR.favor@GRE > 79 }
}

turkish_stance_in_greco_italian_war_positive = {
    check_variable = { TUR.favor@GRE > 49 }
}

turkish_stance_in_greco_italian_war_neutral = {
    check_variable = { TUR.favor@GRE < 50 }
}

###

bulgarian_stance_in_greco_italian_war_early_entry = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final < 1.60 }
    check_variable = { TUR.favor@GRE < 50 }
    check_variable = { BUL.favor@GRE < 0 }
    BUL = { is_in_faction_with = GER }
}

bulgarian_stance_in_greco_italian_war_lurking = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final < 1.60 }
    OR = {
        check_variable = { TUR.favor@GRE > 49 }
        check_variable = { BUL.favor@GRE > 0 }
        NOT = { BUL = { is_in_faction_with = GER } }
    }
}

bulgarian_stance_in_greco_italian_war_denied_by_germans = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final > 1.59 }
}

german_stance_in_greco_italian_war_positive = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final > 6 }
}

german_stance_in_greco_italian_war_neutral = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final > 1.59 }
}

german_stance_in_greco_italian_war_devious = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final < 1.60 } 
    check_variable = { final > 0 }
}

german_stance_in_greco_italian_war_negative = {
    set_temp_variable = { x = GER.favor@GRE }
    divide_temp_variable = { x = 50 }                      # [0,2]
    add_to_temp_variable = { final = x }
    set_temp_variable = { x = GRE.axal }
    subtract_from_temp_variable = { x = 40 }
    if = { limit = { check_variable = { GRE.alax > 79.99 } } set_temp_variable = { final = 0 } }
    else_if = { limit = { check_variable = { GRE.alax < 20 } } add_to_temp_variable = { final = 2 } }
    else_if = { limit = { check_variable = { GRE.alax < 5 } } add_to_temp_variable = { final = 5 } }            ### Min 0, max 7
    check_variable = { final = 0 }
}

###
has_paid_at_least_dY_debt = {
    custom_trigger_tooltip = {
        tooltip = GRE_at_least_dY_total_debt
        check_variable = { var=GRE_debt_to_the_ifc_paid_var_cat value=dY compare=greater_than_or_equals }
    }
}

has_paid_at_least_dY_debt_to_dX = {
    custom_trigger_tooltip = {
        tooltip = GRE_at_least_dY_total_debt_to_dX
        check_variable = { var=GRE_paid_debt@var:dX value=dY compare=greater_than_or_equals }
    }
}

havent_frozen_debt_with_from = {
    check_variable = { GRE.true_debt@THIS = 0 }
}

##########################################################################
current_ruling_monarchists = {
    custom_trigger_tooltip ={
        tooltip = current_ruling_mon_tt
        GRE = { has_government = neutrality }
    }
}
current_ruling_communists = {
    custom_trigger_tooltip ={
        tooltip = current_ruling_com_tt
        GRE = { has_government = communism }
    }
}
current_ruling_democrats = {
    custom_trigger_tooltip ={
        tooltip = current_ruling_dem_tt
        GRE = { has_government = democratic }
    }
}
current_ruling_fascists = {
    custom_trigger_tooltip ={
        tooltip = current_ruling_fas_tt
        GRE = { has_government = fascism }
    }
}

###[NEW NSB TRIGGERS FOR CHAIN OF COMMAND]###
##[IDEOLOGY OK]###
ideologically_tmpZ = {
    if = {
        limit = { has_trait = trait_GRE_stauch_monarchist_persona }
        OR = {
            current_ruling_monarchists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_mon_tt
                check_variable = { var=GRE.fct_mon value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_republican_persona }
        OR = {
            current_ruling_democrats = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_dem_tt
                check_variable = { var=GRE.fct_dem value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_communist_persona }
        OR = {
            current_ruling_communists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_com_tt
                check_variable = { var=GRE.fct_com value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_fascist_persona }
        OR = {
            current_ruling_fascists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_fas_tt
                check_variable = { var=GRE.fct_fas value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_conventional_leanings }
        OR = {
            current_ruling_monarchists = yes
            current_ruling_democrats = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_mon_tt
                check_variable = { var=GRE.fct_mon value=tmpZ compare=greater_than_or_equals }
            }
            custom_trigger_tooltip = {
                tooltip = fct_at_least_dem_tt
                check_variable = { var=GRE.fct_dem value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_socialdemocratic_leanings }
        OR = {
            current_ruling_democrats = yes
            current_ruling_communists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_dem_tt
                check_variable = { var=GRE.fct_dem value=tmpZ compare=greater_than_or_equals }
            }
            custom_trigger_tooltip = {
                tooltip = fct_at_least_com_tt
                check_variable = { var=GRE.fct_com value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_monarchofascism_leanings }
        OR = {
            current_ruling_monarchists = yes
            current_ruling_fascists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_mon_tt
                check_variable = { var=GRE.fct_mon value=tmpZ compare=greater_than_or_equals }
            }
            custom_trigger_tooltip = {
                tooltip = fct_at_least_fas_tt
                check_variable = { var=GRE.fct_fas value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
    else_if = {
        limit = { has_trait = trait_GRE_revolutionary_leanings }
        OR = {
            current_ruling_communists = yes
            current_ruling_fascists = yes
            custom_trigger_tooltip = {
                tooltip = fct_at_least_com_tt
                check_variable = { var=GRE.fct_com value=tmpZ compare=greater_than_or_equals }
            }
            custom_trigger_tooltip = {
                tooltip = fct_at_least_fas_tt
                check_variable = { var=GRE.fct_fas value=tmpZ compare=greater_than_or_equals }
            }
        }
    }
}
##[Wanted for Dead]##
is_not_retired = { custom_trigger_tooltip = { tooltip = retired_tt NOT = { has_character_flag = retired_character } } }
no_longer_target_of_the_failed_coup = { custom_trigger_tooltip = { tooltip = humiliation_reverted_tt NOT = { has_character_flag = target_of_the_failed_coup } } }
not_wanted_for_dead = { custom_trigger_tooltip = { tooltip = not_wanted_for_dead_tt NOT = { has_character_flag = wanted_for_dead } } }
##[Purged/Surrendered/Dead]##
not_psd = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead NOT = { has_character_flag = purged_by_regime } NOT = { has_character_flag = surrendered_to_the_enemy } NOT = { has_character_flag = killed_in_action } } }
does_not_have_known_army_chief_of_staff = {
    amount_taken_ideas = { amount > 0 slots = { army_chief } }
    NOT = {
        GRE_alexandros_papagos = { has_character_flag = selected_as_army_chief }
        GRE_markos_drakos = { has_character_flag = selected_as_army_chief }
        GRE_georgios_stanotas = { has_character_flag = selected_as_army_chief }
        GRE_napoleon_zervas = { has_character_flag = selected_as_army_chief }
        GRE_konstantinos_davakis = { has_character_flag = selected_as_army_chief }
    }
}
##########################################################################[OLD]
not_purged_surrendered_dead_papagos = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_papagos_purged = 0 } check_variable = { hc_papagos_surrendered = 0 } check_variable = { hc_papagos_dead = 0 }}}
not_purged_surrendered_dead_drakos = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_drakos_purged = 0 } check_variable = { hc_drakos_surrendered = 0 } check_variable = { hc_drakos_dead = 0 }}}
not_purged_surrendered_dead_stanotas = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_stanotas_purged = 0 } check_variable = { hc_stanotas_surrendered = 0 } check_variable = { hc_stanotas_dead = 0 }}}
not_purged_surrendered_dead_zervas = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_zervas_purged = 0 } check_variable = { hc_zervas_surrendered = 0 } check_variable = { hc_zervas_dead = 0 }}}
not_purged_surrendered_dead_plastiras = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_plastiras_purged = 0 } check_variable = { hc_plastiras_surrendered = 0 } check_variable = { hc_plastiras_dead = 0 }}}
not_purged_surrendered_dead_katsimitros = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_katsimitros_purged = 0 } check_variable = { hc_katsimitros_surrendered = 0 } check_variable = { hc_katsimitros_dead = 0 }}}
not_purged_surrendered_dead_kosmas = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_kosmas_purged = 0 } check_variable = { hc_kosmas_surrendered = 0 } check_variable = { hc_kosmas_dead = 0 }}}
not_purged_surrendered_dead_aggelis = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_aggelis_purged = 0 } check_variable = { hc_aggelis_surrendered = 0 } check_variable = { hc_aggelis_dead = 0 }}}
not_purged_surrendered_dead_davakis = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_davakis_purged = 0 } check_variable = { hc_davakis_surrendered = 0 } check_variable = { hc_davakis_dead = 0 }}}
not_purged_surrendered_dead_alexakis = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_alexakis_purged = 0 } check_variable = { hc_alexakis_surrendered = 0 } check_variable = { hc_alexakis_dead = 0 }}}
not_purged_surrendered_dead_velouchiotis = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_velouchiotis_purged = 0 } check_variable = { hc_velouchiotis_surrendered = 0 } check_variable = { hc_velouchiotis_dead = 0 }}}
not_purged_surrendered_dead_bakirtzis = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_bakirtzis_purged = 0 } check_variable = { hc_bakirtzis_surrendered = 0 } check_variable = { hc_bakirtzis_dead = 0 }}}
not_purged_surrendered_dead_rossios = { custom_trigger_tooltip = { tooltip = not_purged_surrendered_dead check_variable = { hc_rossios_purged = 0 } check_variable = { hc_rossios_surrendered = 0 } check_variable = { hc_rossios_dead = 0 }}}

has_papagos_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_papagos_as_field_marshall_tt
        OR = {
            has_idea = GRE_alexandros_papagos_1
            has_idea = GRE_alexandros_papagos_2
            has_idea = GRE_alexandros_papagos_3
            has_idea = GRE_alexandros_papagos_4
        } 
    }
}

has_not_papagos_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_not_papagos_as_field_marshall_tt
        NOT = {
            has_idea = GRE_alexandros_papagos_1
            has_idea = GRE_alexandros_papagos_2
            has_idea = GRE_alexandros_papagos_3
            has_idea = GRE_alexandros_papagos_4
        } 
    }
}

has_drakos_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_drakos_as_field_marshall_tt
        OR = {
            has_idea = GRE_markos_drakos_1
            has_idea = GRE_markos_drakos_2
            has_idea = GRE_markos_drakos_3
            has_idea = GRE_markos_drakos_4
        } 
    }
}

has_not_drakos_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_not_drakos_as_field_marshall_tt
        NOT = {
            has_idea = GRE_markos_drakos_1
            has_idea = GRE_markos_drakos_2
            has_idea = GRE_markos_drakos_3
            has_idea = GRE_markos_drakos_4
        } 
    }
}

has_stanotas_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_stanotas_as_field_marshall_tt
        OR = {
            has_idea = GRE_georgios_stanotas_1
            has_idea = GRE_georgios_stanotas_2
            has_idea = GRE_georgios_stanotas_3
            has_idea = GRE_georgios_stanotas_4
        }
    }
}

has_not_stanotas_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_not_stanotas_as_field_marshall_tt
        NOT = {
            has_idea = GRE_georgios_stanotas_1
            has_idea = GRE_georgios_stanotas_2
            has_idea = GRE_georgios_stanotas_3
            has_idea = GRE_georgios_stanotas_4
        }
    }
}

has_zervas_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_zervas_as_field_marshall_tt
        OR = {
            has_idea = GRE_napoleon_zervas_1
            has_idea = GRE_napoleon_zervas_2
            has_idea = GRE_napoleon_zervas_3
            has_idea = GRE_napoleon_zervas_4
        }
    }
}

has_not_zervas_as_field_marshall = {
    custom_trigger_tooltip = {
        tooltip = has_not_zervas_as_field_marshall_tt
        NOT = {
            has_idea = GRE_napoleon_zervas_1
            has_idea = GRE_napoleon_zervas_2
            has_idea = GRE_napoleon_zervas_3
            has_idea = GRE_napoleon_zervas_4
        }
    }
}

dem_generals_exist = {
    custom_trigger_tooltip = {
        tooltip = dem_generals_exist_tt
        any_unit_leader = {
            has_trait = trait_GRE_stauch_republican_persona
            check_variable={ purged=0 }
        }
    }
}

com_generals_exist = {
    custom_trigger_tooltip = {
        tooltip = com_army_members_exist_tt
        any_unit_leader = {
            has_trait = trait_GRE_stauch_communist_persona
            check_variable={ purged=0 }
        }
    }
}

undesired_generals_exist = {
    custom_trigger_tooltip = {
        tooltip = undesied_army_members_exist_tt
        any_character = {
            OR = {
                is_army_leader = yes
                is_navy_leader = yes
            }
            check_variable={ purged=0 }
            is_general_undesired = yes
        }
    }
}

is_general_undesired = {
    if = {
        limit = { has_trait = trait_GRE_stauch_monarchist_persona }
        NOT = { GRE = { has_government = neutrality } }
        check_variable = { var = GRE.fct_mon value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_republican_persona }
        NOT = { GRE = { has_government = democratic } }
        check_variable = { var = GRE.fct_dem value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_communist_persona }
        NOT = { GRE = { has_government = communism  } }
        check_variable = { var = GRE.fct_com value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_stauch_fascist_persona }
        NOT = { GRE = { has_government = fascism } }
        check_variable = { var = GRE.fct_fas value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_conventional_leanings }
        NOT = { GRE = { has_government = neutrality } }
        NOT = { GRE = { has_government = democratic } }
        check_variable = { var = GRE.fct_dem value = 70 compare = less_than }
        check_variable = { var = GRE.fct_mon value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_revolutionary_leanings }
        NOT = { GRE = { has_government = fascism } }
        NOT = { GRE = { has_government = communism } }
        check_variable = { var = GRE.fct_fas value = 70 compare = less_than }
        check_variable = { var = GRE.fct_com value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_monarchofascism_leanings }
        NOT = { GRE = { has_government = fascism } }
        NOT = { GRE = { has_government = neutrality } }
        check_variable = { var = GRE.fct_fas value = 70 compare = less_than }
        check_variable = { var = GRE.fct_mon value = 70 compare = less_than }
    }
    else_if = {
        limit = { has_trait = trait_GRE_socialdemocratic_leanings }
        NOT = { GRE = { has_government = democratic } }
        NOT = { GRE = { has_government = communism } }
        check_variable = { var = GRE.fct_dem value = 70 compare = less_than }
        check_variable = { var = GRE.fct_com value = 70 compare = less_than }
    }
}

is_assigned_with_at_least_60_bats = {
    is_assigned = yes
    check_variable = { num_battalions > 59 }
}

is_ideologically_close_tmpZ = {
    OR = {
        GRE = { has_completed_focus = GRE_dreams_of_a_grand_coalition }
        if = {
            limit = { has_trait = trait_gre_stauch_monarchist }
            OR = {
                GRE = { has_government = neutrality }
                check_variable = { var = GRE.fct_mon value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_stauch_republican_persona }
            OR = {
                GRE = { has_government = democratic }
                check_variable = { var = GRE.fct_dem value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_stauch_communist_persona }
            OR = {
                GRE = { has_government = communism  }
                check_variable = { var = GRE.fct_com value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_stauch_fascist_persona }
            OR = {
                GRE = { has_government = fascism }
                check_variable = { var = GRE.fct_fas value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_conventional_leanings }
            OR = {
                GRE = { has_government = neutrality }
                GRE = { has_government = democratic }
                check_variable = { var = GRE.fct_dem value = tmpZ compare = greater_than_or_equals }
                check_variable = { var = GRE.fct_mon value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_revolutionary_leanings }
            OR = {
                GRE = { has_government = fascism }
                GRE = { has_government = communism }
                check_variable = { var = GRE.fct_fas value = tmpZ compare = greater_than_or_equals }
                check_variable = { var = GRE.fct_com value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_monarchofascism_leanings }
            OR = {
                GRE = { has_government = fascism }
                GRE = { has_government = neutrality }
                check_variable = { var = GRE.fct_fas value = tmpZ compare = greater_than_or_equals }
                check_variable = { var = GRE.fct_mon value = tmpZ compare = greater_than_or_equals }
            }
        }
        else_if = {
            limit = { has_trait = trait_GRE_socialdemocratic_leanings }
            OR = {
                GRE = { has_government = democratic }
                GRE = { has_government = communism }
                check_variable = { var = GRE.fct_dem value = tmpZ compare = greater_than_or_equals }
                check_variable = { var = GRE.fct_com value = tmpZ compare = greater_than_or_equals }
            }
        }
    }
}

is_junior_general = {
    NOT = { has_trait = gre_three_war_veteran }
    NOT = { has_trait = gre_two_war_veteran }
    NOT = { has_trait = gre_war_veteran }
}

general_has_veterancy = {
    OR = {
        has_trait = gre_three_war_veteran
        has_trait = gre_two_war_veteran
        has_trait = gre_war_veteran
    }
}

not_recently_trained = {
    NOT = { has_trait = gre_recently_trained_general }
}

has_very_low_unpreparedness_level = {
    OR = {
        has_trait = gre_unprepared_general_3
        has_trait = gre_unprepared_general_2
    }
}

army_officers_fully_prepared = {
    check_variable = { var = preparedness_level value = 1 compare = greater_than_or_equals}
}

assigned_has_unpreparedness_level = {
    is_assigned = yes
    OR = {
        has_trait = gre_unprepared_general_3
        has_trait = gre_unprepared_general_2
        has_trait = gre_unprepared_general_1
        has_trait = gre_unprepared_general_0
    }
}

has_unpreparedness_level = {
    OR = {
        has_trait = gre_unprepared_general_3
        has_trait = gre_unprepared_general_2
        has_trait = gre_unprepared_general_1
        has_trait = gre_unprepared_general_0
    }
}

is_fully_reintegrated = {
    NOT = {
        has_trait = gre_unprepared_general_3
        has_trait = gre_unprepared_general_2
        has_trait = gre_unprepared_general_1
        has_trait = gre_unprepared_general_0
    }
}

has_at_least_tmpQ_combat_traits = {
    set_temp_variable = { y = num_traits }
    set_temp_variable = { x = num_personality_traits }
    subtract_from_temp_variable = { y = x }
    check_variable = { y > tmpQ }
}

has_at_least_2_of_retrain_bonus_traits = {
    count_triggers = {
        amount = 2
        has_trait = organizer
        has_trait = commando
        has_trait = trickster
        has_trait = guerilla_fighter
    }
}

has_neither_inf_leader_eng_trickster = {
    NOT = {
        has_trait = infantry_leader
        has_trait = trait_engineer
        has_trait = trickster
    }
}


#####################################################


####################################################################
#################[German Situation in the Ostfront]#################
####################################################################

HS_GER_OST_on_the_verge_of_victory_lvl4 = {
    var:global.province_controllers^3529 = { OR = { original_tag = GER is_in_faction_with = GER } } #Stalingrad
    var:global.province_controllers^6380 = { OR = { original_tag = GER is_in_faction_with = GER } } #Moscow
    var:global.province_controllers^3151 = { OR = { original_tag = GER is_in_faction_with = GER } } #Leningrad
}

HS_GER_OST_very_close_to_victory_lvl3 = {
    count_triggers = {
        amount = 2
        var:global.province_controllers^3529 = { OR = { original_tag = GER is_in_faction_with = GER } } #Stalingrad
        var:global.province_controllers^6380 = { OR = { original_tag = GER is_in_faction_with = GER } } #Moscow
        var:global.province_controllers^3151 = { OR = { original_tag = GER is_in_faction_with = GER } } #Leningrad
    }
}

HS_GER_OST_close_to_victory_lvl2 = {
    count_triggers = {
        amount = 1
        var:global.province_controllers^3529 = { OR = { original_tag = GER is_in_faction_with = GER } } #Stalingrad
        var:global.province_controllers^6380 = { OR = { original_tag = GER is_in_faction_with = GER } } #Moscow
        var:global.province_controllers^3151 = { OR = { original_tag = GER is_in_faction_with = GER } } #Leningrad
    }
}

HS_GER_OST_expanding_lvl1_at_least_tmpPER = {                                   # In total: 48.
    multiply_temp_variable = { tmpPER = 48 }
    round_temp_variable = tmpPER
    meta_trigger = {
        text = {
            count_triggers = {
                amount = [AMNT]
                var:global.province_controllers^3734 = { OR = { original_tag = GER is_in_faction_with = GER } } #Krasnodar
                var:global.province_controllers^9417 = { OR = { original_tag = GER is_in_faction_with = GER } } #Rostov
                var:global.province_controllers^9461 = { OR = { original_tag = GER is_in_faction_with = GER } } #Voroshilovgrad
                var:global.province_controllers^418 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kharkov
                var:global.province_controllers^6474 = { OR = { original_tag = GER is_in_faction_with = GER } } #Stalino
                var:global.province_controllers^3580 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kursk
                var:global.province_controllers^413 = { OR = { original_tag = GER is_in_faction_with = GER } } #Voronezh
                var:global.province_controllers^9355 = { OR = { original_tag = GER is_in_faction_with = GER } } #Orel
                var:global.province_controllers^3335 = { OR = { original_tag = GER is_in_faction_with = GER } } #Bryansk
                var:global.province_controllers^6262 = { OR = { original_tag = GER is_in_faction_with = GER } } #Tula
                var:global.province_controllers^6398 = { OR = { original_tag = GER is_in_faction_with = GER } } #Lipetsk
                var:global.province_controllers^382 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kaluga
                var:global.province_controllers^11336 = { OR = { original_tag = GER is_in_faction_with = GER } } #Roslavl
                var:global.province_controllers^306 = { OR = { original_tag = GER is_in_faction_with = GER } } #Smolensk
                var:global.province_controllers^11241 = { OR = { original_tag = GER is_in_faction_with = GER } } #Vitebsk
                var:global.province_controllers^9289 = { OR = { original_tag = GER is_in_faction_with = GER } } #Mogilev
                var:global.province_controllers^11234 = { OR = { original_tag = GER is_in_faction_with = GER } } #Luki
                var:global.province_controllers^117 = { OR = { original_tag = GER is_in_faction_with = GER } } #Novgorod
                var:global.province_controllers^9197 = { OR = { original_tag = GER is_in_faction_with = GER } } #Volkhov
                var:global.province_controllers^9098 = { OR = { original_tag = GER is_in_faction_with = GER } } #Luga
                var:global.province_controllers^11202 = { OR = { original_tag = GER is_in_faction_with = GER } } #Pskov
                var:global.province_controllers^4640 = { OR = { original_tag = GER is_in_faction_with = GER } } #Narva
                var:global.province_controllers^3152 = { OR = { original_tag = GER is_in_faction_with = GER } } #Tallin
                var:global.province_controllers^185 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kuressaare
                var:global.province_controllers^9340 = { OR = { original_tag = GER is_in_faction_with = GER } } #Riga
                var:global.province_controllers^3255 = { OR = { original_tag = GER is_in_faction_with = GER } } #Jekabils
                var:global.province_controllers^310 = { OR = { original_tag = GER is_in_faction_with = GER } } #Daugavils
                var:global.province_controllers^406 = { OR = { original_tag = GER is_in_faction_with = GER } } #Motodeczno
                var:global.province_controllers^11370 = { OR = { original_tag = GER is_in_faction_with = GER } } #Minsk
                var:global.province_controllers^3350 = { OR = { original_tag = GER is_in_faction_with = GER } } #Bobruysk
                var:global.province_controllers^9288 = { OR = { original_tag = GER is_in_faction_with = GER } } #Gomel
                var:global.province_controllers^525 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kiev
                var:global.province_controllers^488 = { OR = { original_tag = GER is_in_faction_with = GER } } #Cherkasy
                var:global.province_controllers^11561 = { OR = { original_tag = GER is_in_faction_with = GER } } #Krivol Rih
                var:global.province_controllers^11437 = { OR = { original_tag = GER is_in_faction_with = GER } } #Dnipropetrovsk
                var:global.province_controllers^11405 = { OR = { original_tag = GER is_in_faction_with = GER } } #Zaporozhe
                var:global.province_controllers^3686 = { OR = { original_tag = GER is_in_faction_with = GER } } #Sevastopol
                var:global.province_controllers^9680 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kerch
                var:global.province_controllers^11670 = { OR = { original_tag = GER is_in_faction_with = GER } } #Odessa
                var:global.province_controllers^476 = { OR = { original_tag = GER is_in_faction_with = GER } } #Vinnytsia
                var:global.province_controllers^11479 = { OR = { original_tag = GER is_in_faction_with = GER } } #Lwow
                var:global.province_controllers^3392 = { OR = { original_tag = GER is_in_faction_with = GER } } #Brzesc Litewski
                var:global.province_controllers^11301 = { OR = { original_tag = GER is_in_faction_with = GER } } #Bialystok
                var:global.province_controllers^3320 = { OR = { original_tag = GER is_in_faction_with = GER } } #Vilnius
                var:global.province_controllers^6296 = { OR = { original_tag = GER is_in_faction_with = GER } } #Kaunas
                var:global.province_controllers^9483 = { OR = { original_tag = GER is_in_faction_with = GER } } #Siauliai
                var:global.province_controllers^9262 = { OR = { original_tag = GER is_in_faction_with = GER } } #Liepaja
                var:global.province_controllers^3296 = { OR = { original_tag = GER is_in_faction_with = GER } } #Ventspils
            }
        }
        AMNT = "[?tmpPER|.0]"
    }
}

HS_GER_OST_collapsing_lvl0 = {
    46 = { THIS.controller = { is_in_faction_with = SOV } }
}

####################################################################
#################[German Situation in the Westfront]################
####################################################################

HS_GER_WST_main_westwall_integrity_violated = {
    any_country = {
        has_war_with = GER
        any_of = {
            array = global.main_westwall_state_array
            army_manpower_in_state = { state=v amount>0 }
        }
    }
}

HS_GER_WST_paris_liberated = { 
    var:global.province_controllers^11506 = { has_war_with=GER } #Paris
}

####################################################################
#################[German Situation in the Nordfront]################
####################################################################

HS_GER_WST_nord_westwall_integrity_violated = {
    any_country = {
        has_war_with = GER
        any_of = {
            array = global.nord_westwall_state_array
            army_manpower_in_state = { state=v amount>0 }
        }
    }
}

####################################################################
##################[German Situation in the Sudfront]################
####################################################################

HS_AXIS_SUD_Afrika_Conquered = {
    any_country = {
        has_war_with = GER
        any_of = {
            array = global.north_afrikan_states
            NOT = { controls_state = var:v }
        }
    }
}

HS_AXIS_SUD_Afrika_Lost = {
    any_country = {
        has_war_with = GER
        NOT = {
            any_of = {
                array = global.north_afrikan_states
                army_manpower_in_state = { state=v amount>0 }
            }
        }
    }
}

####################################################################

crete_is_no_loose_end = {
    custom_trigger_tooltip = {
        tooltip = crete_is_no_loose_end_tt
        GRE = { 
            OR = {
            has_completed_focus = GRE_crete_holds
            has_completed_focus = GRE_crete_falls 
            } 
        }
    }
}

hellenic_state_has_formed_for_a_bit = {
    custom_trigger_tooltip = {
        tooltip = crete_14_days_tt
        if = {
            limit = { has_global_flag = GRE_crete_still_holding }
            has_global_flag = {
                flag = GRE_crete_still_holding
                days > 14
            }
        }
    }
}

has_any_negative_black_market_level = {
    OR = {
        has_dynamic_modifier = { modifier = black_market_obscure }
        has_dynamic_modifier = { modifier = black_market_cemented }
        has_dynamic_modifier = { modifier = black_market_ubshakeable }
    }
}

has_any_positive_black_market_level = {
    OR = {
        has_dynamic_modifier = { modifier = black_market_obscure_controlled }
        has_dynamic_modifier = { modifier = black_market_cemented_controlled }
        has_dynamic_modifier = { modifier = black_market_ubshakeable_controlled }
    }
}

has_any_black_market_level = {
    OR = {
        has_dynamic_modifier = { modifier = black_market_obscure }
        has_dynamic_modifier = { modifier = black_market_cemented }
        has_dynamic_modifier = { modifier = black_market_ubshakeable }
        has_dynamic_modifier = { modifier = black_market_obscure_controlled }
        has_dynamic_modifier = { modifier = black_market_cemented_controlled }
        has_dynamic_modifier = { modifier = black_market_ubshakeable_controlled }
    }
}

has_axis_occupation = {
    custom_trigger_tooltip = {
        tooltip = has_axis_occupation_tt
        OR = {
            has_global_flag = GRE_crete_still_holding
            has_global_flag = GRE_government_in_exile
        }    
    }
}

has_respective_behavior = {
    #OR = { 
    check_variable = { THIS.GAR_BEH@GRE = 2 }
    #}
}

gre_hs_xor_trigger_only = {                                                         #Contrary to the effect, here we ONLY check if a human player is playing Greece/HS                                              
    OR = {
        AND = {
            GRE = { is_ai = no }
            event_target:hellenic_state = { is_ai = yes }
        }
        AND = {
            GRE = { is_ai = yes }
            event_target:hellenic_state = { is_ai = no }
        }
    }
}

has_black_market_negative = {
    custom_trigger_tooltip = {
        tooltip = has_negative_bm_tt
        OR = {
            has_dynamic_modifier = { modifier = black_market_obscure }
            has_dynamic_modifier = { modifier = black_market_cemented }
            has_dynamic_modifier = { modifier = black_market_ubshakeable }
        }
    }
}

belongs_in_the_allied_sphere = {
    OR = { 
        original_tag = ENG
        original_tag = USA
        original_tag = FRA
        is_in_faction_with = ENG
    }
}

belongs_in_the_axis_sphere = {
    OR = { 
        original_tag = GER
        original_tag = ITA
        original_tag = JAP
        is_in_faction_with = GER
    }
}

has_friendly_relationship_with_resistance_factions = {
    custom_trigger_tooltip = {
        tooltip = has_friendly_relationship_with_resistance_factions_tt
        check_variable = { fct_mon > 74 }
        check_variable = { fct_dem > 74 }
        check_variable = { fct_com > 74 }
    }
}
    
com_is_below_tmpZ = {
    custom_trigger_tooltip = {
        tooltip = fct_below_com_tt
        set_temp_variable = { y = tmpZ }
        multiply_temp_variable = { y = 100 }
        check_variable = { fct_com < y }
    }
}

com_is_at_least_tmpZ = {
    custom_trigger_tooltip = {
        tooltip = fct_at_least_com_tt
        check_variable = { var = fct_com value = tmpZ compare = greater_than_or_equals }
    }
}

dem_is_at_least_tmpZ = {
    custom_trigger_tooltip = {
        tooltip = fct_at_least_dem_tt
        check_variable = { var = fct_dem value = tmpZ compare = greater_than_or_equals }
    }
}

dem_is_below_tmpZ = {
    custom_trigger_tooltip = {
        tooltip = fct_below_dem_tt
        check_variable = { fct_dem < tmpZ }
    }
}

is_influencable = {
    is_in_array = {
        array = global.favor_mechanic
        value = THIS.id
    }
}
    
    
    
    
    
    
    
    
    
    
    